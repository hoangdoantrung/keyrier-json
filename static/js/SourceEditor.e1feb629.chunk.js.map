{"version":3,"sources":["Components/Editor/SourceEditor/RequestHeader.tsx","Components/Editor/SourceEditor/RequestSource.tsx","Components/Editor/SourceEditor/LateralMenu.tsx","Components/Editor/SourceEditor/SourceEditor.tsx","Components/Deferred/Loading.tsx","Components/Deferred/Loading.module.scss","Components/Deferred/DeferredAceEditor.tsx"],"names":["RenderHeaderInput","memo","withErrorBoundary","_ref","header","onRemove","onChange","id","react","className","key","value","concat","type","name","placeholder","_onChange","_x","apply","this","arguments","toString","e","Object","objectSpread","target","_onChange2","_x2","DeferredReactstrap","outline","color","onClick","connect","setSource","updateSource","onRequestSucceed","_useChangeEventState","useChangeEventState","_useChangeEventState2","slicedToArray","method","setMethod","_useChangeEventState3","_useChangeEventState4","url","setUrl","_useChangeEventState5","_useChangeEventState6","body","setBody","_useState","useState","_useState2","headers","setHeaders","_useState3","_useState4","error","setError","_useToggleState","useToggleState","_useToggleState2","hasBody","setHasBody","submit","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","requestInit","request","json","result","wrap","_context","prev","next","map","h","Request","logInfo","mode","Array","from","entries","cache","credentials","redirect","referrer","fetch","sent","t0","logError","abrupt","customToString","stop","htmlFor","defaultValue","inline","hidden","toConsumableArray","length","index","filter","block","message","stack","displayError","onFileChange","toggleImportDropdown","onFileContentReady","files","fileReader","FileReader","onload","readAsText","onReset","resetEditor","onClear","clearEditor","dropdownIsOpen","toggleDropdown","_useToggleState3","_useToggleState4","modalIsOpen","toggleModal","vertical","isOpen","toggle","caret","style","display","role","size","RequestSource","state","sourceText","getSourceText","SourceEditor_LateralMenu","DeferredAceEditor","theme","fontSize","cursorStart","showPrintMargin","showGutter","highlightActiveLine","jsonBeautify","debounceChangePeriod","minLines","maxLines","wrapEnabled","setOptions","showLineNumbers","editorProps","$blockScrolling","Infinity","annotations","width","__webpack_require__","d","__webpack_exports__","Loading","react__WEBPACK_IMPORTED_MODULE_0__","_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","componentName","props","Styles","loader","module","exports","spin","loadAceEditor","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","aceEditor","then","t","bind","Promise","all","AceEditor","Loadable","loading"],"mappings":"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","file":"static/js/SourceEditor.e1feb629.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Button } from '../../Deferred/DeferredReactstrap'\nimport { memo } from 'react'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\n\ninterface Header {\n  key: string\n  value: string\n}\n\ninterface Props {\n  header: Header\n  id: number\n  onChange: (h: Header) => void\n  onRemove: () => void\n}\n\nexport const RenderHeaderInput: React.FC<Props> = memo(\n  withErrorBoundary(({ header, onRemove, onChange, id }) => {\n    return (\n      <div className=\"row align-items-center\" key={id}>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={header.key}\n            id={`headerName${id}`}\n            type=\"text\"\n            name={`headerName${id}`}\n            placeholder=\"enter an name\"\n            onChange={e => onChange({ ...header, key: e.target.value })}\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={header.value}\n            type=\"text\"\n            name={`headerValue${id}`}\n            id={`headerValue${id}`}\n            placeholder=\"enter an value\"\n            onChange={e => onChange({ ...header, value: e.target.value })}\n          />\n        </div>\n        <div className=\"col-sm-2\">\n          <Button outline={true} color=\"danger\" onClick={onRemove}>\n            remove\n          </Button>\n        </div>\n      </div>\n    )\n  })\n)\n","import * as React from 'react'\nimport { logError, logInfo } from '../../../helpers/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from '../../../Actions/actions'\nimport { customToString } from '../../../helpers/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo } from 'react'\nimport { Alert, FormGroup, Form, Button } from '../../Deferred/DeferredReactstrap'\nimport { useToggleState, useChangeEventState } from '../../../Hooks/hooks'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\n\ninterface Props {\n  onRequestSucceed: () => void\n  setSource: (src: string) => void\n}\n\nconst displayError = (error: TypeError | null) => {\n  if (!error) {\n    return <></>\n  }\n  return (\n    <Alert color=\"danger\">\n      Error: {error.message ? error.message : ''}\n      {error.stack ? error.stack : ''}\n    </Alert>\n  )\n}\n\nconst HttpRequestSource: React.FC<Props> = ({ onRequestSucceed, setSource }) => {\n  const [method, setMethod] = useChangeEventState('GET')\n  const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n  const [body, setBody] = useChangeEventState('')\n  const [headers, setHeaders] = useState([{ key: 'Accept', value: 'application/json' }])\n  const [error, setError] = useState(null as TypeError | null)\n  const [hasBody, setHasBody] = useToggleState()\n\n  const submit = async () => {\n    setError(null)\n\n    const requestInit: RequestInit = {\n      method,\n      headers: headers.map(h => [h.key, h.value]),\n      body: hasBody ? body : null,\n    }\n\n    const request = new Request(url, requestInit)\n\n    logInfo('request', {\n      url: request.url,\n      method: request.method,\n      mode: request.mode,\n      body: request.body,\n      headers: Array.from((request.headers as any).entries()),\n      cache: request.cache,\n      credentials: request.credentials,\n      redirect: request.redirect,\n      referrer: request.referrer,\n    })\n\n    let json: string\n    try {\n      const result = await fetch(request)\n      json = await result.json()\n    } catch (error) {\n      logError('HttpRequestSource.submit', error)\n      setError(error)\n      return\n    }\n    setSource(customToString(json))\n    onRequestSucceed()\n  }\n\n  return (\n    <>\n      <FormGroup>\n        <label htmlFor=\"requestMethod\">Method</label>\n        <select\n          className=\"form-control-lg form-control\"\n          defaultValue={method}\n          name=\"requestMethod\"\n          id=\"requestMethod\"\n          onChange={setMethod}\n        >\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>OPTIONS</option>\n        </select>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"requestUrl\">Request URL</label>\n        <input\n          defaultValue={url}\n          className=\"form-control-lg form-control\"\n          type=\"url\"\n          name=\"requestUrl\"\n          id=\"requestUrl\"\n          placeholder=\"enter an URL\"\n          onChange={setUrl}\n        />\n      </FormGroup>\n      <div className=\"position-relative form-check\">\n        <label className=\"form-check-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n        </label>\n      </div>\n      <Form inline={true} hidden={!hasBody}>\n        <FormGroup>\n          <label>Body</label>\n          <input className=\"form-control-lg form-control\" type=\"textarea\" value={body} onChange={setBody} />{' '}\n        </FormGroup>\n      </Form>\n      <label htmlFor=\"headers\">Request headers</label>{' '}\n      <Button\n        outline={true}\n        color=\"primary\"\n        onClick={() => setHeaders([...headers, { key: `name-${headers.length + 1}`, value: 'value' }])}\n      >\n        Add header\n      </Button>\n      <br />\n      <br />\n      {headers.map((header, index) => (\n        <RenderHeaderInput\n          header={header}\n          key={index}\n          id={index}\n          onChange={h => {\n            headers[index] = { ...h }\n            setHeaders([...headers])\n          }}\n          onRemove={() => setHeaders(headers.filter(h => h !== header))}\n        />\n      ))}\n      <br />\n      <Button block={true} color=\"primary\" onClick={submit}>\n        Submit\n      </Button>\n      {displayError(error)}\n    </>\n  )\n}\n\nexport default connect(\n  null,\n  { setSource: updateSource }\n)(memo(withErrorBoundary(HttpRequestSource)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  UpdateSource,\n  updateSource,\n  ResetEditor,\n  resetEditor,\n  ClearEditor,\n  clearEditor,\n} from '../../../Actions/actions'\nimport HttpRequestSource from './RequestSource'\nimport './ImportMenu.css'\nimport { logInfo } from '../../../helpers/logger'\nimport { useToggleState } from '../../../Hooks/hooks'\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  ButtonGroup,\n} from '../../Deferred/DeferredReactstrap'\nimport { memo } from 'react'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\ninterface Props {\n  onFileContentReady: (fileContent: string) => UpdateSource\n  onReset: () => ResetEditor\n  onClear: () => ClearEditor\n}\n\nconst LateralMenu: React.FC<Props> = ({ onReset, onFileContentReady, onClear }) => {\n  const [dropdownIsOpen, toggleDropdown] = useToggleState()\n  const [modalIsOpen, toggleModal] = useToggleState()\n  return (\n    <>\n      <ButtonGroup vertical={true}>\n        <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n          <DropdownToggle caret={true} color=\"primary\">\n            Import\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem toggle={false}>\n              <label>\n                Browse JSON file...\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"sourceFile\"\n                  style={{ display: 'none' }}\n                  onChange={onFileChange(toggleDropdown, onFileContentReady)}\n                />\n              </label>\n            </DropdownItem>\n            <DropdownItem onClick={toggleModal}>\n              <label>HTTP request</label>\n            </DropdownItem>\n            <DropdownItem onClick={onReset}>\n              <label>Reset</label>\n            </DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        <Button color=\"primary\" onClick={onClear}>\n          Clear\n        </Button>\n      </ButtonGroup>\n      <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n        <ModalBody>\n          <HttpRequestSource onRequestSucceed={toggleModal} />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nconst onFileChange = (toggleImportDropdown: () => void, onFileContentReady: (s: string) => void) => (\n  e: React.ChangeEvent<HTMLInputElement>\n) => {\n  logInfo('onFileChange')\n  toggleImportDropdown()\n  if (e.target.files && e.target.files.length > 0) {\n    const fileReader = new FileReader()\n    logInfo('e.target.files', e.target.files[0].name)\n    fileReader.onload = () => {\n      if (fileReader.result) {\n        onFileContentReady(fileReader.result.toString())\n      }\n    }\n    fileReader.readAsText(e.target.files[0])\n  }\n}\n\nconst mapStateToProps = () => ({})\n\nexport default connect(\n  mapStateToProps,\n  { onFileContentReady: updateSource, onReset: resetEditor, onClear: clearEditor }\n)(memo(withErrorBoundary(LateralMenu)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport { UpdateSource, updateSource } from '../../../Actions/actions'\nimport { jsonBeautify } from '../../../helpers/json'\nimport { RootState } from '../../../State/State'\nimport ImportMenu from './LateralMenu'\nimport { AceEditor } from '../../Deferred/DeferredAceEditor'\nimport { getSourceText } from '../../../Store/selectors'\nimport { memo } from 'react'\n\ninterface Props {\n  onChange: (val: string) => UpdateSource\n  sourceText: string\n}\n\nconst SourceEditor: React.FC<Props> = ({ onChange, sourceText }) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-2\">\n        <h3>1. Paste your JSON:</h3>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <ImportMenu />\n      </div>\n      <div className=\"col-sm-10\">\n        <AceEditor\n          mode=\"json\"\n          theme=\"monokai\"\n          name=\"sourceAceEditor\"\n          onChange={onChange}\n          fontSize={13}\n          cursorStart={1}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={jsonBeautify(sourceText)}\n          debounceChangePeriod={1000}\n          minLines={35}\n          maxLines={35}\n          wrapEnabled={true}\n          setOptions={{\n            showLineNumbers: true,\n          }}\n          editorProps={{ $blockScrolling: Infinity }}\n          annotations={[]}\n          width={'100%'}\n        />\n      </div>\n    </div>\n  </>\n)\n\nconst mapStateToProps = (state: RootState) => ({\n  sourceText: getSourceText(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { onChange: updateSource }\n)(memo(SourceEditor))\n","import * as React from 'react'\nimport Styles from './Loading.module.scss'\n\nexport const Loading = (componentName: string) => (props: LoadableExport.LoadingComponentProps) => {\n  if (props.error) {\n    return <div>{props.error}</div>\n  }\n\n  return <div className={Styles.loader}>{process.env.NODE_ENV === 'production' ? '' : componentName}</div>\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__zsQ18\",\"spin\":\"Loading_spin__3n9Ub\"};","import { Loading } from './Loading'\nimport * as Loadable from 'react-loadable'\n\nconst loadAceEditor = async () => {\n  const aceEditor = await import(/* webpackChunkName: \"react-ace\" */ 'react-ace')\n  await Promise.all([\n    import(/* webpackChunkName: \"brace/theme/monokai\" */ 'brace/theme/monokai'),\n    import(/* webpackChunkName: \"brace/theme/github\" */ 'brace/theme/github'),\n    import(/* webpackChunkName: \"brace/mode/json\" */ 'brace/mode/json'),\n    import(/* webpackChunkName: \"brace/mode/javascript\" */ 'brace/mode/javascript'),\n    import(/* webpackChunkName: \"brace/mode/mysql\" */ 'brace/mode/mysql'),\n    import(/* webpackChunkName: \"brace/ext/language_tools\" */ 'brace/ext/language_tools'),\n    import(/* webpackChunkName: \"brace/ext/searchbox\" */ 'brace/ext/searchbox'),\n    import(/* webpackChunkName: \"brace/snippets/javascript\" */ 'brace/snippets/javascript'),\n    import(/* webpackChunkName: \"brace/snippets/json\" */ 'brace/snippets/json'),\n  ])\n  return aceEditor\n}\n\nexport const AceEditor = Loadable({\n  loading: Loading('AceEditor'),\n  loader: loadAceEditor,\n})\n"],"sourceRoot":""}