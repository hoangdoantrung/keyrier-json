{"version":3,"sources":["helpers/string.ts","Store/selectors.ts","registerServiceWorker.ts","helpers/sql.ts","helpers/code.ts","State/State.ts","Reducers/reducers.ts","Store/persistence.ts","Store/store.ts","Themes/themes.ts","index.tsx","helpers/logger.ts","helpers/json.ts"],"names":["__webpack_require__","d","__webpack_exports__","customToString","containsIgnoreCase","obj","Array","isArray","map","e","join","JSON","stringify","undefined","toString","str","part","toLocaleLowerCase","includes","getOutputErrorMessage","state","app","output","errorMessage","getOutputIsArray","table","getOutputActiveTab","selectedTab","getOutputObject","getOutputSearchTerm","searchTerm","getOutputSearchMatch","match","getOutputTableData","Object","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","array","getisOutputTableModalOpen","isModalOpen","getTheme","userSettings","globalTheme","getdisplayedColumns","displayedColumns","getTableArray","getColumns","columns","getGroupBy","groupBy","getQueryText","query","text","getSourceText","source","getQueryMode","mode","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","mapWithFields","v","fields","mapped","constructor","nodes","Star","temp","forEach","field","value","_","values","key","value2","name","sqlEvaluation","sourceString","queryString","sqlTree","parse","Error","result","sourceDataObject","fromPath","length","toConsumableArray","shift","chain","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","executeQuery","jsonParseSafe","toLowerCase","path","newPath","computePath","jsEvaluation","trim","lodash","code","evaluatedQuery","eval","apply","getInitialAppState","initialStateJson","rootReducer","rootState","arguments","action","newState","objectSpread","newOutputState","type","sourceText","computeOutput","previousState","codeEvaluation","message","keyMap","is","keys","keysToAdd","sort","ax","b","localeCompare","tab","_containsTerm2","containsTerm","src","filteredObj","from","k","getOwnPropertyNames","propertyName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","propertyNameContains","_containsTerm","splice","err","return","groupByList","gb","rootReducers","combineReducers","theme","loadFromLocalStorage","localStorage","getItem","loadOrdCreate","defaultValue","savedStateString","merge","logError","configureStore","AppState","UserSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","subscribe","appstate","getState","setItem","Map","set","t","bind","importThemeStyleCustom","themeLoader","Promise","reject","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","promises","ReactDOM","App","wrap","_context","prev","all","sent","default","render","react","es","document","getElementById","registerServiceWorker","stop","this","start","logWarning","logInfo","payload","warn","info","jsonBeautify","_logger__WEBPACK_IMPORTED_MODULE_0__","parsed","safeStr","replace"],"mappings":"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","file":"static/js/main.4066f6ba.chunk.js","sourcesContent":["export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj\n    return array.map(e => customToString(e)).join(',')\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj)\n  }\n  if (typeof obj === 'undefined') {\n    return ''\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString()\n  }\n\n  return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true\n  }\n\n  return false\n}\n","import { RootState } from '../State/State'\n\nexport const getOutputErrorMessage = (state: RootState) => state.app.output.errorMessage\n\nexport const getOutputIsArray = (state: RootState) => state.app.output.table.isArray\nexport const getOutputActiveTab = (state: RootState) => state.app.output.selectedTab\nexport const getOutputObject = (state: RootState) => state.app.output.obj\nexport const getOutputSearchTerm = (state: RootState) => state.app.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => state.app.output.match\n\nexport const getOutputTableData = (state: RootState) => [...state.app.output.table.array]\n\nexport const getisOutputTableModalOpen = (state: RootState) => state.app.output.table.isModalOpen\n\nexport const getTheme = (state: RootState) => state.userSettings.globalTheme\n\nexport const getdisplayedColumns = (state: RootState) => [...state.app.output.table.displayedColumns]\nexport const getTableArray = (state: RootState) => [...state.app.output.table.array]\nexport const getColumns = (state: RootState) => [...state.app.output.table.columns]\nexport const getGroupBy = (state: RootState) => [...state.app.output.table.groupBy]\n\nexport const getQueryText = (state: RootState) => state.app.query.text\nexport const getSourceText = (state: RootState) => state.app.source.text\nexport const getQueryMode = (state: RootState) => state.app.query.mode\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree } from 'sql-parser'\nimport { jsonParseSafe } from './json'\n\nexport const computePath = (path: string[]) => {\n  if (!path || path.length === 0) {\n    return []\n  }\n  if (path[0] === 'data') {\n    const newPath = [...path]\n    newPath.shift()\n    return newPath\n  }\n\n  return path\n}\n\nconst mapWithFields = (v: object, fields: Field[]) => {\n  let mapped = v\n  if (fields[0].constructor !== nodes.Star) {\n    const temp: any = {}\n    fields.forEach(field => {\n      const value = _.get(mapped, field.field.values)\n      let key = field.field.value\n\n      if (field.field.value2) {\n        key = field.field.value2\n      }\n\n      if (field.name) {\n        key = field.name.value\n      }\n\n      temp[key] = value\n    })\n    mapped = temp\n  }\n\n  return mapped\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n  let fromPath: string[] = []\n\n  if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n    if (sqlTree.source.name.values[0] === 'data') {\n      fromPath = [...sqlTree.source.name.values]\n      fromPath.shift()\n    }\n  }\n\n  let result = _.chain(sourceDataObject)\n\n  if (fromPath && fromPath.length > 0) {\n    result = result.get(fromPath)\n  }\n  if (_.isArray(sourceDataObject)) {\n    return result\n      .filter(v => {\n        if (!sqlTree.where || !sqlTree.where.conditions) {\n          return true\n        }\n        const leftValue = sqlTree.where.conditions.left\n        const rightValue = sqlTree.where.conditions.right\n        const operation = sqlTree.where.conditions.operation\n        return compareOperands(operation, leftValue, rightValue, v)\n      })\n      .map(v => mapWithFields(v, sqlTree.fields))\n      .value()\n  } else {\n    return mapWithFields(result.value(), sqlTree.fields)\n  }\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n  try {\n    const sqlTree = parse(queryString)\n\n    if (sqlTree.source.name.values[0] !== 'data') {\n      return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n    }\n\n    const sourceDataObject: object = jsonParseSafe(sourceString)\n\n    const result = executeQuery(sqlTree, sourceDataObject)\n\n    return JSON.stringify(result)\n  } catch (e) {\n    return e\n  }\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n  if (operation) {\n    if (operation.toLowerCase() === 'or') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) ||\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) &&\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n  }\n\n  if (!left.value) {\n    return false\n  }\n\n  const leftValue = _.get(value, computePath(left.values))\n\n  if (operation === '=' && leftValue === right.value) {\n    return true\n  }\n  if (operation === '!=' && leftValue !== right.value) {\n    return true\n  }\n  if (operation === '<>' && leftValue !== right.value) {\n    return true\n  }\n\n  if (right.value) {\n    if (operation === '>' && leftValue > right.value) {\n      return true\n    }\n    if (operation === '>=' && leftValue >= right.value) {\n      return true\n    }\n    if (operation === '<' && leftValue < right.value) {\n      return true\n    }\n    if (operation === '<=' && leftValue <= right.value) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { QueryMode } from '../State/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode): string | null | Error => {\n  if (mode === 'Javascript') {\n    return jsEvaluation(sourceString, queryString)\n  } else if (mode === 'SQL') {\n    return sqlEvaluation(sourceString, queryString)\n  }\n\n  return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string) => {\n  if (!sourceString || sourceString.trim() === '') {\n    return null\n  }\n\n  if (!queryString || queryString.trim() === '') {\n    return null\n  }\n\n  try {\n    ;(window as any)._ = lodash\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString})\n      `\n    const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n    const type = typeof evaluatedQuery\n    if (type !== 'string') {\n      return null\n    }\n    return evaluatedQuery as string\n  } catch (error) {\n    return error\n  } finally {\n    ;(window as any)._ = undefined\n  }\n}\n","import initialStateJson from './default-state.json'\nimport { Theme } from '../Themes/themes.js'\nimport { DeepReadonly } from 'utility-types'\n\nexport type QueryState = DeepReadonly<{\n  text: string\n  mode: QueryMode\n}>\n\nexport type SourceState = DeepReadonly<{\n  text: string\n}>\n\nexport type tabType = 'RawJson' | 'Table'\n\nexport type OupoutState = Readonly<{\n  text: string\n  searchTerm: string\n  match: boolean\n  selectedTab: tabType\n  obj: object | null\n  errorMessage?: string\n  table: OupoutTableState\n}>\n\nexport type itemType = any\n\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type OupoutTableState = Readonly<{\n  array: itemType[]\n  isArray: boolean\n  isModalOpen: boolean\n  displayedColumns: string[]\n  columns: string[]\n  groupBy: string[]\n}>\n\nexport type UserSettingsState = DeepReadonly<{\n  globalTheme: Theme | null\n}>\n\nexport type AppState = Readonly<{\n  source: SourceState\n  query: QueryState\n  output: OupoutState\n  error?: Error\n}>\n\nexport type RootState = Readonly<{\n  app: AppState\n  userSettings: UserSettingsState\n}>\n\nexport const getInitialAppState = () => initialStateJson as AppState\nexport const getInitialUserSettingsState = () =>\n  ({\n    globalTheme: 'materia',\n  } as UserSettingsState)\n","import { combineReducers, Reducer } from 'redux'\nimport { Action, UpdateSource } from '../Actions/actions'\nimport { codeEvaluation } from '../helpers/code'\nimport { jsonParseSafe } from '../helpers/json'\nimport {\n  OupoutState,\n  QueryState,\n  AppState,\n  SourceState,\n  OupoutTableState,\n  getInitialAppState,\n  itemType,\n  UserSettingsState,\n  getInitialUserSettingsState,\n  QueryMode,\n  tabType,\n} from '../State/State'\nimport { logError, logWarning } from '../helpers/logger'\nimport { containsIgnoreCase } from '../helpers/string'\n\nexport const rootReducer = (rootState: AppState = getInitialAppState(), action: Action): AppState => {\n  const newState = {\n    ...rootState,\n    query: query(rootState.query, action),\n    source: source(rootState.source, action),\n  }\n\n  const newOutputState = output(newState.output, newState.source.text, newState.query.text, action, newState.query.mode)\n  return {\n    ...newState,\n    output: {\n      ...newOutputState,\n      table: table(newOutputState.table, action),\n    },\n  }\n}\n\nexport const crashReporter = (rootReducerFn: Reducer<AppState>, state: AppState, action: Action): AppState => {\n  try {\n    return rootReducerFn(state, action)\n  } catch (error) {\n    logError(error, state)\n    logWarning('You may need to clear local storage !!!')\n\n    return { ...state, error }\n  }\n}\n\nexport const sourceText = (state: SourceState, action: UpdateSource) => ({\n  ...state,\n  text: action.source,\n})\n\nexport const source = (state: SourceState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return sourceText(state, action)\n    default:\n      return state\n  }\n}\nexport const userSettings = (state: UserSettingsState = getInitialUserSettingsState(), action: Action) => {\n  switch (action.type) {\n    case 'SWITCH_GLOBAL_THEME':\n      return { ...state, globalTheme: action.theme }\n    default:\n      return state\n  }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return {\n        ...state,\n        text: action.query,\n      }\n    case 'UPDATE_QUERY_MODE':\n      return {\n        ...state,\n        mode: action.mode,\n        text: action.mode === 'Javascript' ? getInitialAppState().query.text : 'select * from data',\n      }\n    default:\n      return state\n  }\n}\n\nexport const outputTable = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      return { ...state, columns: action.columns }\n    default:\n      return state\n  }\n}\ninterface Map<T> {\n  [key: string]: T\n}\nexport const computeOutput = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n): OupoutState => {\n  const text = codeEvaluation(sourceString, queryString, mode)\n  if (text === null) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      searchTerm: '',\n      match: false,\n      table: {\n        array: [],\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n  if (text instanceof Error) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      searchTerm: '',\n      match: false,\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        array: [],\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n\n  let displayedColumns = new Array<string>()\n  const array: itemType[] = jsonParseSafe(text)\n  const isArray = Array.isArray(array)\n  if (isArray) {\n    const keyMap: Map<string> = {}\n    array\n      .filter(d => d)\n      .filter(d => typeof d === 'object')\n      .filter(d => !Object.is(d, {}))\n      .filter(d => !Array.isArray(d))\n      .map(d => (d ? Object.keys(d) : []))\n      .forEach(keysToAdd => {\n        keysToAdd.forEach(key => (keyMap[key] = key))\n      })\n    displayedColumns = Object.keys(keyMap)\n      .filter(key => key)\n      .filter(key => typeof key === 'string')\n      .filter(key => key.trim() !== '')\n      .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n  }\n  const isModalOpen =\n    action.type === 'TOGGLE_OUTPUT_TABLE_MODAL' ? !previousState.table.isModalOpen : previousState.table.isModalOpen\n\n  let selectedTab: tabType = isArray ? 'Table' : 'RawJson'\n\n  if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n    selectedTab = action.tab\n  }\n  return {\n    selectedTab,\n    text,\n    obj: jsonParseSafe(text),\n    searchTerm: '',\n    match: false,\n    table: {\n      array: isArray ? array : [],\n      isArray,\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: [],\n    },\n  }\n}\n\nexport const output = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n): OupoutState => {\n  switch (action.type) {\n    case '@@INIT':\n    case 'EVALUATE_CODE':\n    case 'RESET_EDITOR':\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      return computeOutput(previousState, sourceString, queryString, action, mode)\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return {\n        ...previousState,\n        table: {\n          ...previousState.table,\n          isModalOpen: !previousState.table.isModalOpen,\n        },\n      }\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      return {\n        ...previousState,\n        selectedTab: action.tab,\n      }\n    case 'UPDATE_OUTPUT_SEARCH_TERM':\n      return {\n        ...filter(computeOutput(previousState, sourceString, queryString, action, mode), action.searchTerm),\n        searchTerm: action.searchTerm,\n        selectedTab: 'RawJson',\n      }\n    default:\n      return previousState\n  }\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n  if (typeof src !== 'string' && typeof src !== 'object') {\n    return { match: false, filteredObj: src }\n  }\n\n  if (typeof src === 'string') {\n    if (containsIgnoreCase(src, searchTerm)) {\n      return { match: true, filteredObj: src }\n    }\n    return { match: false, filteredObj: src }\n  }\n  const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n  const keys = Array.isArray(obj)\n    ? Array.from({ length: obj.length }, (_, k) => k)\n    : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n  let result = false\n\n  for (const propertyName of keys) {\n    const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n    if (propertyNameContains) {\n      result = true\n      continue\n    }\n    const child = obj[propertyName]\n    const { match, filteredObj } = containsTerm(child, searchTerm)\n    if (propertyNameContains || match) {\n      result = true\n      obj[propertyName] = filteredObj\n    } else {\n      if (Array.isArray(obj) && typeof propertyName === 'number') {\n        obj.splice(propertyName, 1)\n      } else {\n        delete obj[propertyName]\n      }\n    }\n  }\n  if (!result) {\n    if (!Array.isArray(obj)) {\n      ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n    } else {\n      obj.length = 0\n    }\n  }\n  return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n  if (!searchTerm && searchTerm.trim() === '') {\n    return { ...state, match: false }\n  }\n  const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n  if (match) {\n    return { ...state, obj: filteredObj, match }\n  }\n\n  return state\n}\n\nexport const table = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = state.groupBy\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n        }\n      })\n      return {\n        ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList,\n      }\n    case 'UPDATE_TABLE_GROUP_BY':\n      return {\n        ...state,\n        groupBy: action.groupBy\n          .filter(gb => state.displayedColumns.indexOf(gb) !== -1)\n          .filter(gb => gb !== 'Group by...'),\n      }\n    default:\n      return state\n  }\n}\n\nexport const rootReducerReset = (state: AppState | undefined, action: Action) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getInitialAppState() }, action)\n  }\n  return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n  app: rootReducerReset,\n  userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getInitialAppState } from '../State/State'\nimport { logError } from '../helpers/logger'\nimport lodash from 'lodash'\n\nexport const persistAppState = (appstate: AppState) => {\n  if (window.localStorage) {\n    localStorage.setItem('keyrier-json.app.state', JSON.stringify(appstate))\n  }\n}\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n  if (window.localStorage) {\n    localStorage.setItem('keyrier-json.user.settings', JSON.stringify(userSettings))\n  }\n}\n\nexport const loadAppState = () => {\n  return loadFromLocalStorage('keyrier-json.app.state')\n}\n\nexport const loadUserSettingsState = () => {\n  return loadFromLocalStorage('keyrier-json.user.settings')\n}\n\nconst loadFromLocalStorage = (key: string) => {\n  if (window.localStorage) {\n    return localStorage.getItem(key)\n  }\n  return null\n}\n\nexport const loadOrdCreate = <T extends {}>(key: string, defaultValue: T) => {\n  let state = defaultValue\n  try {\n    const savedStateString = loadFromLocalStorage(key)\n    if (savedStateString) {\n      state = JSON.parse(savedStateString)\n      state = lodash.merge({}, getInitialAppState(), state)\n    }\n  } catch (error) {\n    logError(error)\n  }\n  return state\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from '../Reducers/reducers'\nimport { getInitialAppState, getInitialUserSettingsState } from '../State/State'\nimport { loadOrdCreate, persistAppState, persistUserSettings } from './persistence'\n\nexport const configureStore = () => {\n  const AppState = loadOrdCreate('keyrier-json.app.state', getInitialAppState())\n  const UserSettingsState = loadOrdCreate('keyrier-json.user.settings', getInitialUserSettingsState())\n\n  const composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        })\n      : compose\n\n  const store = createStore(rootReducers, { app: AppState, userSettings: UserSettingsState }, composeEnhancers())\n\n  store.subscribe(() => {\n    persistAppState(store.getState().app)\n    persistUserSettings(store.getState().userSettings)\n  })\n\n  return store\n}\n","const map = new Map<Theme, () => Promise<any>>()\nmap.set('materia', () => import('bootswatch/dist/materia/bootstrap.min.css'))\nmap.set('darkly', () => import('bootswatch/dist/darkly/bootstrap.min.css'))\nmap.set('sandstone', () => import('bootswatch/dist/sandstone/bootstrap.min.css'))\nmap.set('cosmo', () => import('bootswatch/dist/cosmo/bootstrap.min.css'))\nmap.set('cyborg', () => import('bootswatch/dist/cyborg/bootstrap.min.css'))\nmap.set('flatly', () => import('bootswatch/dist/flatly/bootstrap.min.css'))\nmap.set('journal', () => import('bootswatch/dist/journal/bootstrap.min.css'))\nmap.set('litera', () => import('bootswatch/dist/litera/bootstrap.min.css'))\nmap.set('lumen', () => import('bootswatch/dist/lumen/bootstrap.min.css'))\nmap.set('lux', () => import('bootswatch/dist/lux/bootstrap.min.css'))\nmap.set('minty', () => import('bootswatch/dist/minty/bootstrap.min.css'))\nmap.set('pulse', () => import('bootswatch/dist/pulse/bootstrap.min.css'))\nmap.set('simplex', () => import('bootswatch/dist/simplex/bootstrap.min.css'))\nmap.set('slate', () => import('bootswatch/dist/slate/bootstrap.min.css'))\nmap.set('solar', () => import('bootswatch/dist/solar/bootstrap.min.css'))\nmap.set('spacelab', () => import('bootswatch/dist/spacelab/bootstrap.min.css'))\nmap.set('superhero', () => import('bootswatch/dist/superhero/bootstrap.min.css'))\nmap.set('united', () => import('bootswatch/dist/united/bootstrap.min.css'))\nmap.set('yeti', () => import('bootswatch/dist/yeti/bootstrap.min.css'))\n\nexport const importThemeStyleCustom = (theme: Theme | null) => {\n  if (theme !== null) {\n    const themeLoader = map.get(theme)\n    if (themeLoader) {\n      return themeLoader()\n    }\n  }\n  return Promise.reject('theme is not defined')\n}\n\nexport type Theme =\n  | 'materia'\n  | 'darkly'\n  | 'sandstone'\n  | 'cosmo'\n  | 'cyborg'\n  | 'flatly'\n  | 'journal'\n  | 'litera'\n  | 'lumen'\n  | 'lux'\n  | 'minty'\n  | 'pulse'\n  | 'simplex'\n  | 'slate'\n  | 'solar'\n  | 'spacelab'\n  | 'superhero'\n  | 'united'\n  | 'yeti'\n","import { Provider } from 'react-redux'\nimport './index.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport registerServiceWorker from './registerServiceWorker'\nimport { configureStore } from './Store/store'\nimport * as React from 'react'\nimport { getTheme } from './Store/selectors'\nimport { importThemeStyleCustom } from './Themes/themes'\n\nconst start = async () => {\n  const store = configureStore()\n\n  const promises = await Promise.all([\n    import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n    import(/* webpackChunkName: \"App\" */ './Components/App'),\n    importThemeStyleCustom(getTheme(store.getState())),\n  ])\n\n  const ReactDOM = promises[0]\n  const App = promises[1].default\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root') as HTMLElement\n  )\n\n  registerServiceWorker()\n}\n\nstart()\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload: any = undefined) => {\n  console.error('Keyrier error', error)\n  if (typeof payload !== 'undefined') {\n    console.error(payload)\n  }\n}\n\nexport const logWarning = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.warn(message)\n  }\n  console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.info(message)\n  }\n  console.info(message, payload)\n}\n","import { logError } from './logger'\n\nexport const jsonBeautify = (str: string) => {\n  if (!str || str.trim() === '') {\n    return ''\n  }\n\n  const parsed = jsonParseSafe(str)\n  if (typeof parsed === 'string') {\n    return parsed\n  }\n\n  try {\n    return JSON.stringify(parsed, null, 2)\n  } catch (error) {\n    logError(error, str)\n  }\n  return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n  if (!str || str.trim() === '') {\n    return null\n  }\n\n  const safeStr = str\n    .replace(/\\\\n/g, '\\\\n')\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, '\\\\&')\n    .replace(/\\\\r/g, '\\\\r')\n    .replace(/\\\\t/g, '\\\\t')\n    .replace(/\\\\b/g, '\\\\b')\n    .replace(/\\\\f/g, '\\\\f')\n    .replace(/[\\u0000-\\u0019]+/g, '')\n\n  try {\n    return JSON.parse(safeStr)\n  } catch (error) {\n    return str\n  }\n}\n"],"sourceRoot":""}