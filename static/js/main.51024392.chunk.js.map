{"version":3,"sources":["helpers/json.ts","helpers/string.ts","Store/selectors.ts","registerServiceWorker.ts","helpers/sql.ts","helpers/code.ts","State/State.ts","Reducers/reducers.ts","Store/persistence.ts","Store/store.ts","Themes/themes.ts","index.tsx","helpers/logger.ts"],"names":["__webpack_require__","d","__webpack_exports__","jsonBeautify","jsonParseSafe","_logger__WEBPACK_IMPORTED_MODULE_0__","str","trim","parsed","JSON","stringify","error","logError","safeStr","replace","parse","customToString","containsIgnoreCase","obj","Array","isArray","map","e","join","undefined","toString","part","toLocaleLowerCase","includes","getOutputErrorMessage","state","app","output","errorMessage","getOutputIsArray","table","getOutputActiveTab","selectedTab","getOutputObject","getOutputSearchTerm","searchTerm","getOutputSearchMatch","match","getOutputTableData","Object","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","array","getisOutputTableModalOpen","isModalOpen","getTheme","userSettings","globalTheme","getdisplayedColumns","displayedColumns","getTableArray","getColumns","columns","getGroupBy","groupBy","getQueryText","query","text","getSourceText","source","getQueryMode","mode","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","mapWithFields","v","fields","mapped","constructor","nodes","Star","temp","forEach","field","value","_","values","key","value2","name","sqlEvaluation","sourceString","queryString","sqlTree","Error","result","sourceDataObject","fromPath","length","toConsumableArray","shift","chain","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","executeQuery","toLowerCase","path","newPath","computePath","jsEvaluation","lodash","code","evaluatedQuery","eval","apply","getInitialAppState","initialStateJson","emptyState","rootReducer","rootState","arguments","action","type","newState","objectSpread","newOutputState","sourceText","computeOutput","previousState","codeEvaluation","message","keyMap","is","keys","keysToAdd","sort","ax","b","localeCompare","tab","_containsTerm2","containsTerm","src","filteredObj","from","k","getOwnPropertyNames","propertyName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","propertyNameContains","_containsTerm","splice","err","return","groupByList","gb","rootReducers","combineReducers","theme","loadFromLocalStorage","localStorage","getItem","loadOrdCreate","defaultValue","savedStateString","merge","configureStore","AppState","UserSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","subscribe","appstate","getState","setItem","Map","set","t","bind","importThemeStyleCustom","themeLoader","Promise","reject","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","promises","ReactDOM","App","wrap","_context","prev","all","sent","Loadable","default","render","react","es","document","getElementById","registerServiceWorker","stop","this","start","logWarning","logInfo","payload","warn","info"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAEaG,EAAe,SAACG,GAC3B,IAAKA,GAAsB,KAAfA,EAAIC,OACd,MAAO,GAGT,IAAMC,EAASJ,EAAcE,GAC7B,GAAsB,kBAAXE,EACT,OAAOA,EAGT,IACE,OAAOC,KAAKC,UAAUF,EAAQ,KAAM,GACpC,MAAOG,GACPC,YAASD,EAAOL,GAElB,OAAOA,GAGIF,EAAgB,SAACE,GAC5B,IAAKA,GAAsB,KAAfA,EAAIC,OACd,OAAO,KAGT,IAAMM,EAAUP,EACbQ,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,OAAQ,OAChBA,QAAQ,oBAAqB,IAEhC,IACE,OAAOL,KAAKM,MAAMF,GAClB,MAAOF,GACP,OAAOL,qCCvCXN,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAO,IAAMD,EAAiB,SAAjBA,EAAkBE,GAC7B,OAAIC,MAAMC,QAAQF,GACKA,EACRG,IAAI,SAAAC,GAAC,OAAIN,EAAeM,KAAIC,KAAK,KAE7B,kBAARL,EACFT,KAAKC,UAAUQ,GAEL,qBAARA,EACF,GAEG,OAARA,QAAwBM,IAARN,EACXA,EAAIO,WAGN,IAGIR,EAAqB,SAACX,EAAaoB,GAC9C,SAAKpB,IAAQoB,MAGTpB,EAAIqB,oBAAoBC,SAASF,EAAKC,kkBCpB/BE,EAAwB,SAACC,GAAD,OAAsBA,EAAMC,IAAIC,OAAOC,cAE/DC,EAAmB,SAACJ,GAAD,OAAsBA,EAAMC,IAAIC,OAAOG,MAAMf,SAChEgB,EAAqB,SAACN,GAAD,OAAsBA,EAAMC,IAAIC,OAAOK,aAC5DC,EAAkB,SAACR,GAAD,OAAsBA,EAAMC,IAAIC,OAAOd,KACzDqB,EAAsB,SAACT,GAAD,OAAsBA,EAAMC,IAAIC,OAAOQ,YAC7DC,EAAuB,SAACX,GAAD,OAAsBA,EAAMC,IAAIC,OAAOU,OAE9DC,EAAqB,SAACb,GAAD,OAAAc,OAAAC,EAAA,EAAAD,CAA0Bd,EAAMC,IAAIC,OAAOG,MAAMW,QAEtEC,EAA4B,SAACjB,GAAD,OAAsBA,EAAMC,IAAIC,OAAOG,MAAMa,aAEzEC,EAAW,SAACnB,GAAD,OAAsBA,EAAMoB,aAAaC,aAEpDC,EAAsB,SAACtB,GAAD,OAAAc,OAAAC,EAAA,EAAAD,CAA0Bd,EAAMC,IAAIC,OAAOG,MAAMkB,mBACvEC,EAAgB,SAACxB,GAAD,OAAAc,OAAAC,EAAA,EAAAD,CAA0Bd,EAAMC,IAAIC,OAAOG,MAAMW,QACjES,EAAa,SAACzB,GAAD,OAAAc,OAAAC,EAAA,EAAAD,CAA0Bd,EAAMC,IAAIC,OAAOG,MAAMqB,UAC9DC,EAAa,SAAC3B,GAAD,OAAAc,OAAAC,EAAA,EAAAD,CAA0Bd,EAAMC,IAAIC,OAAOG,MAAMuB,UAE9DC,EAAe,SAAC7B,GAAD,OAAsBA,EAAMC,IAAI6B,MAAMC,MACrDC,EAAgB,SAAChC,GAAD,OAAsBA,EAAMC,IAAIgC,OAAOF,MACvDG,EAAe,SAAClC,GAAD,OAAsBA,EAAMC,IAAI6B,MAAMK,w8ECZ5DC,eAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5B,MAAM,4DAGpB,SAAS6B,IACtB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIC,IAAIC,IAAyBN,OAAOC,SAAS5C,YACrDkD,SAAWP,OAAOC,SAASM,OAIvC,OAGFP,OAAOQ,iBAAiB,OAAQ,WAC9B,IAAMC,EAAK,GAAAC,OAAMJ,IAAN,sBAEPR,IAmDV,SAAiCW,GAE/BE,MAAMF,GACHG,KAAK,SAAAC,GAEoB,MAApBA,EAASC,SAAmF,IAAjED,EAASE,QAAQC,IAAI,gBAAiBC,QAAQ,cAE3Eb,UAAUc,cAAcC,MAAMP,KAAK,SAAAQ,GACjCA,EAAaC,aAAaT,KAAK,WAC7BZ,OAAOC,SAASqB,aAKpBC,EAAgBd,KAGnBe,MAAM,WACLC,QAAQC,IAAI,mEAnEVC,CAAwBlB,GAIxBL,UAAUc,cAAcC,MAAMP,KAAK,WACjCa,QAAQC,IACN,+GAMJH,EAAgBd,MAMxB,SAASc,EAAgBd,GACvBL,UAAUc,cACPf,SAASM,GACTG,KAAK,SAAAQ,GACJA,EAAaQ,cAAgB,WAC3B,IAAMC,EAAmBT,EAAaU,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnE,QACf0C,UAAUc,cAAcc,WAK1BP,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAOvBF,MAAM,SAAAjF,GACLkF,QAAQlF,MAAM,4CAA6CA,8DC/D3D0F,EAAgB,SAACC,EAAWC,GAChC,IAAIC,EAASF,EACb,GAAIC,EAAO,GAAGE,cAAgBC,QAAMC,KAAM,CACxC,IAAMC,EAAY,GAClBL,EAAOM,QAAQ,SAAAC,GACb,IAAMC,EAAQC,IAAE5B,IAAIoB,EAAQM,EAAMA,MAAMG,QACpCC,EAAMJ,EAAMA,MAAMC,MAElBD,EAAMA,MAAMK,SACdD,EAAMJ,EAAMA,MAAMK,QAGhBL,EAAMM,OACRF,EAAMJ,EAAMM,KAAKL,OAGnBH,EAAKM,GAAOH,IAEdP,EAASI,EAGX,OAAOJ,GAoCIa,EAAgB,SAACC,EAAsBC,GAClD,IACE,IAAMC,EAAUzG,gBAAMwG,GAEtB,GAAsC,SAAlCC,EAAQzD,OAAOqD,KAAKH,OAAO,GAC7B,OAAO,IAAIQ,MAAJ,GAAA3C,OAAa0C,EAAQzD,OAAOqD,KAAKH,OAAO,GAAxC,0BAGT,IAEMS,EA3CW,SAACF,EAAkBG,GACtC,IAAIC,EAAqB,GAErBJ,EAAQzD,OAAOqD,KAAKH,QAAUO,EAAQzD,OAAOqD,KAAKH,OAAOY,OAAS,GAC9B,SAAlCL,EAAQzD,OAAOqD,KAAKH,OAAO,KAC7BW,EAAQhF,OAAAkF,EAAA,EAAAlF,CAAO4E,EAAQzD,OAAOqD,KAAKH,SAC1Bc,QAIb,IAAIL,EAASV,IAAEgB,MAAML,GAKrB,OAHIC,GAAYA,EAASC,OAAS,IAChCH,EAASA,EAAOtC,IAAIwC,IAElBZ,IAAE5F,QAAQuG,GACLD,EACJO,OAAO,SAAA3B,GACN,IAAKkB,EAAQU,QAAUV,EAAQU,MAAMC,WACnC,OAAO,EAET,IAAMC,EAAYZ,EAAQU,MAAMC,WAAWE,KACrCC,EAAad,EAAQU,MAAMC,WAAWI,MACtCC,EAAYhB,EAAQU,MAAMC,WAAWK,UAC3C,OAAOC,EAAgBD,EAAWJ,EAAWE,EAAYhC,KAE1DjF,IAAI,SAAAiF,GAAC,OAAID,EAAcC,EAAGkB,EAAQjB,UAClCQ,QAEIV,EAAcqB,EAAOX,QAASS,EAAQjB,QAc9BmC,CAAalB,EAFKpH,YAAckH,IAI/C,OAAO7G,KAAKC,UAAUgH,GACtB,MAAOpG,GACP,OAAOA,IAILmH,EAAkB,SAAlBA,EAAmBD,EAA0BH,EAAUE,EAAWxB,GACtE,GAAIyB,EAAW,CACb,GAAgC,OAA5BA,EAAUG,cACZ,OACEF,EAAgBJ,EAAKG,UAAWH,EAAKA,KAAMA,EAAKE,MAAOxB,IACvD0B,EAAgBF,EAAMC,UAAWD,EAAMF,KAAME,EAAMA,MAAOxB,GAI9D,GAAgC,QAA5ByB,EAAUG,cACZ,OACEF,EAAgBJ,EAAKG,UAAWH,EAAKA,KAAMA,EAAKE,MAAOxB,IACvD0B,EAAgBF,EAAMC,UAAWD,EAAMF,KAAME,EAAMA,MAAOxB,GAKhE,IAAKsB,EAAKtB,MACR,OAAO,EAGT,IAAMqB,EAAYpB,IAAE5B,IAAI2B,EA7GC,SAAC6B,GAC1B,IAAKA,GAAwB,IAAhBA,EAAKf,OAChB,MAAO,GAET,GAAgB,SAAZe,EAAK,GAAe,CACtB,IAAMC,EAAOjG,OAAAkF,EAAA,EAAAlF,CAAOgG,GAEpB,OADAC,EAAQd,QACDc,EAGT,OAAOD,EAmGwBE,CAAYT,EAAKpB,SAEhD,GAAkB,MAAduB,GAAqBJ,IAAcG,EAAMxB,MAC3C,OAAO,EAET,GAAkB,OAAdyB,GAAsBJ,IAAcG,EAAMxB,MAC5C,OAAO,EAET,GAAkB,OAAdyB,GAAsBJ,IAAcG,EAAMxB,MAC5C,OAAO,EAGT,GAAIwB,EAAMxB,MAAO,CACf,GAAkB,MAAdyB,GAAqBJ,EAAYG,EAAMxB,MACzC,OAAO,EAET,GAAkB,OAAdyB,GAAsBJ,GAAaG,EAAMxB,MAC3C,OAAO,EAET,GAAkB,MAAdyB,GAAqBJ,EAAYG,EAAMxB,MACzC,OAAO,EAET,GAAkB,OAAdyB,GAAsBJ,GAAaG,EAAMxB,MAC3C,OAAO,EAIX,OAAO,GC9HHgC,EAAe,SAACzB,EAAsBC,GAC1C,IAAKD,GAAwC,KAAxBA,EAAa/G,OAChC,OAAO,KAGT,IAAKgH,GAAsC,KAAvBA,EAAYhH,OAC9B,OAAO,KAGT,IACI6D,OAAe4C,EAAIgC,IACrB,IAAMC,EAAI,uCAAAnE,OAEcwC,EAFd,8BAAAxC,OAGWyC,EAHX,aAKJ2B,EAAiBC,KAAKC,MAAM,KAAM,CAACH,IAEzC,MAAa,kBADOC,EAEX,KAEFA,EACP,MAAOvI,GACP,OAAOA,EAdT,QAgBIyD,OAAe4C,OAAIxF,YCeZ6H,EAAqB,kBAAMC,GAM3BC,EAAuB,CAClCxF,OAAQ,CAAEF,KAAM,IAChBD,MAAO,CAAEC,KAAM,GAAII,KAAM,cACzBjC,OAAQ,CACNU,OAAO,EACPmB,KAAM,GACN3C,IAAK,GACLsB,WAAY,GACZH,YAAa,UACbF,MAAO,CAAEf,SAAS,EAAO0B,MAAO,GAAIU,QAAS,GAAIH,iBAAkB,GAAIL,aAAa,EAAOU,QAAS,qBChD3F8F,EAAc,WAA0E,IAAzEC,EAAyEC,UAAA7B,OAAA,QAAArG,IAAAkI,UAAA,GAAAA,UAAA,GAAnDL,IAAsBM,EAA6BD,UAAA7B,OAAA,EAAA6B,UAAA,QAAAlI,EACnG,GAAoB,iBAAhBmI,EAAOC,KACT,OAAOL,EAET,IAAMM,EAAQjH,OAAAkH,EAAA,EAAAlH,CAAA,GACT6G,EADS,CAEZ7F,MAAOA,EAAM6F,EAAU7F,MAAO+F,GAC9B5F,OAAQA,EAAO0F,EAAU1F,OAAQ4F,KAG7BI,EAAiB/H,EAAO6H,EAAS7H,OAAQ6H,EAAS9F,OAAOF,KAAMgG,EAASjG,MAAMC,KAAM8F,EAAQE,EAASjG,MAAMK,MACjH,OAAOrB,OAAAkH,EAAA,EAAAlH,CAAA,GACFiH,EADL,CAEE7H,OAAOY,OAAAkH,EAAA,EAAAlH,CAAA,GACFmH,EADC,CAEJ5H,MAAOA,EAAM4H,EAAe5H,MAAOwH,QAqB5B5F,EAAS,SAACjC,EAAoB6H,GACzC,OAAQA,EAAOC,MACb,IAAK,qBACH,OARoB,SAAC9H,EAAoB6H,GAArB,OAAA/G,OAAAkH,EAAA,EAAAlH,CAAA,GACrBd,EADqB,CAExB+B,KAAM8F,EAAO5F,SAMFiG,CAAWlI,EAAO6H,GAC3B,QACE,OAAO7H,IAYA8B,EAAQ,SAAC9B,EAAmB6H,GACvC,OAAQA,EAAOC,MACb,IAAK,eACH,OAAOhH,OAAAkH,EAAA,EAAAlH,CAAA,GACFd,EADL,CAEE+B,KAAM8F,EAAO/F,QAEjB,IAAK,oBACH,OAAOhB,OAAAkH,EAAA,EAAAlH,CAAA,GACFd,EADL,CAEEmC,KAAM0F,EAAO1F,KACbJ,KAAsB,eAAhB8F,EAAO1F,KAAwBoF,IAAqBzF,MAAMC,KAAO,uBAE3E,QACE,OAAO/B,IAeAmI,EAAgB,SAC3BC,EACA5C,EACAC,EACAoC,EACA1F,GAEA,IAAMJ,EF1GsB,SAACyD,EAAsBC,EAAqBtD,GACxE,MAAa,eAATA,EACK8E,EAAazB,EAAcC,GAChB,QAATtD,EACFoD,EAAcC,EAAcC,GAG9B,IAAIE,MAAM,oBEmGJ0C,CAAe7C,EAAcC,EAAatD,GACvD,GAAa,OAATJ,EACF,MAAO,CACLxB,YAAa,UACbwB,KAAM,GACN3C,IAAK,KACLsB,WAAY,GACZE,OAAO,EACPP,MAAO,CACLW,MAAO,GACP1B,SAAS,EACT4B,aAAa,EACbK,iBAAkB,GAClBG,QAAS,GACTE,QAAS,KAIf,GAAIG,aAAgB4D,MAClB,MAAO,CACLpF,YAAa,UACbwB,KAAM,GACN3C,IAAK,KACLsB,WAAY,GACZE,OAAO,EACPT,aAAc4B,EAAKuG,QACnBjI,MAAO,CACLf,SAAS,EACT0B,MAAO,GACPE,aAAa,EACbK,iBAAkB,GAClBG,QAAS,GACTE,QAAS,KAKf,IAAIL,EAAmB,IAAIlC,MACrB2B,EAAoB1C,YAAcyD,GAClCzC,EAAUD,MAAMC,QAAQ0B,GAC9B,GAAI1B,EAAS,CACX,IAAMiJ,EAAsB,GAC5BvH,EACGmF,OAAO,SAAAhI,GAAC,OAAIA,IACZgI,OAAO,SAAAhI,GAAC,MAAiB,kBAANA,IACnBgI,OAAO,SAAAhI,GAAC,OAAK2C,OAAO0H,GAAGrK,EAAG,MAC1BgI,OAAO,SAAAhI,GAAC,OAAKkB,MAAMC,QAAQnB,KAC3BoB,IAAI,SAAApB,GAAC,OAAKA,EAAI2C,OAAO2H,KAAKtK,GAAK,KAC/B4G,QAAQ,SAAA2D,GACPA,EAAU3D,QAAQ,SAAAK,GAAG,OAAKmD,EAAOnD,GAAOA,MAE5C7D,EAAmBT,OAAO2H,KAAKF,GAC5BpC,OAAO,SAAAf,GAAG,OAAIA,IACde,OAAO,SAAAf,GAAG,MAAmB,kBAARA,IACrBe,OAAO,SAAAf,GAAG,MAAmB,KAAfA,EAAI3G,SAClBkK,KAAK,SAACC,EAAIC,GAAL,OAAWD,EAAG/B,cAAciC,cAAcD,EAAEhC,iBAEtD,IAAM3F,EACY,8BAAhB2G,EAAOC,MAAwCM,EAAc/H,MAAMa,YAAckH,EAAc/H,MAAMa,YAEnGX,EAAuBjB,EAAU,QAAU,UAK/C,MAHoB,gCAAhBuI,EAAOC,OACTvH,EAAcsH,EAAOkB,KAEhB,CACLxI,cACAwB,OACA3C,IAAKd,YAAcyD,GACnBrB,WAAY,GACZE,OAAO,EACPP,MAAO,CACLW,MAAO1B,EAAU0B,EAAQ,GACzB1B,UACA4B,cACAK,mBACAG,QAASH,EACTK,QAAS,MAKF1B,EAAS,SACpBkI,EACA5C,EACAC,EACAoC,EACA1F,GAEA,OAAQ0F,EAAOC,MACb,IAAK,SACL,IAAK,gBACL,IAAK,eACL,IAAK,eACL,IAAK,qBACL,IAAK,8BACH,OAAOK,EAAcC,EAAe5C,EAAcC,EAAaoC,EAAQ1F,GACzE,IAAK,4BACH,OAAOrB,OAAAkH,EAAA,EAAAlH,CAAA,GACFsH,EADL,CAEE/H,MAAMS,OAAAkH,EAAA,EAAAlH,CAAA,GACDsH,EAAc/H,MADd,CAEHa,aAAckH,EAAc/H,MAAMa,gBAGxC,IAAK,8BACH,OAAOJ,OAAAkH,EAAA,EAAAlH,CAAA,GACFsH,EADL,CAEE7H,YAAasH,EAAOkB,MAExB,IAAK,4BACH,OAAOjI,OAAAkH,EAAA,EAAAlH,CAAA,GACFqF,EAAOgC,EAAcC,EAAe5C,EAAcC,EAAaoC,EAAQ1F,GAAO0F,EAAOnH,YAD1F,CAEEA,WAAYmH,EAAOnH,WACnBH,YAAa,YAEjB,QACE,OAAO6H,IAoDPjC,EAAS,SAACnG,EAAoBU,GAClC,IAAKA,GAAoC,KAAtBA,EAAWjC,OAC5B,OAAOqC,OAAAkH,EAAA,EAAAlH,CAAA,GAAKd,EAAZ,CAAmBY,OAAO,IAF6B,IAAAoI,EAhD/B,SAAfC,EAAgBC,EAAyBxI,GACpD,GAAmB,kBAARwI,GAAmC,kBAARA,EACpC,MAAO,CAAEtI,OAAO,EAAOuI,YAAaD,GAGtC,GAAmB,kBAARA,EACT,OAAI/J,YAAmB+J,EAAKxI,GACnB,CAAEE,OAAO,EAAMuI,YAAaD,GAE9B,CAAEtI,OAAO,EAAOuI,YAAaD,GAEtC,IAAM9J,EAA8BC,MAAMC,QAAQ4J,GAAdpI,OAAAkF,EAAA,EAAAlF,CAAyBoI,GAAzBpI,OAAAkH,EAAA,EAAAlH,CAAA,GAAqCoI,GAEnET,EAAOpJ,MAAMC,QAAQF,GACvBC,MAAM+J,KAAK,CAAErD,OAAQ3G,EAAI2G,QAAU,SAACb,EAAGmE,GAAJ,OAAUA,IAC7CvI,OAAOwI,oBAAoBlK,GAAK+G,OAAO,SAAAoD,GAAY,OAAIA,IAEvD3D,GAAS,EAjB8D4D,GAAA,EAAAC,GAAA,EAAAC,OAAAhK,EAAA,IAmB3E,QAAAiK,EAAAC,EAA2BnB,EAA3BoB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiC,KAAtBD,EAAsBI,EAAA1E,MACzBgF,EAA+C,kBAAjBV,GAA6BpK,YAAmBoK,EAAc7I,GAClG,GAAIuJ,EACFrE,GAAS,MADX,CAIA,IAN+BsE,EAOAjB,EADjB7J,EAAImK,GACiC7I,GAA3CE,EAPuBsJ,EAOvBtJ,MAAOuI,EAPgBe,EAOhBf,YACXc,GAAwBrJ,GAC1BgF,GAAS,EACTxG,EAAImK,GAAgBJ,GAEhB9J,MAAMC,QAAQF,IAAgC,kBAAjBmK,EAC/BnK,EAAI+K,OAAOZ,EAAc,UAElBnK,EAAImK,KAlC0D,MAAAa,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GA6C3E,OAPK9D,IACEvG,MAAMC,QAAQF,GAGjBA,EAAI2G,OAAS,EAFX0C,EAAkB1D,QAAQ,SAACwE,GAAD,cAAiCnK,EAAImK,MAK9D,CAAE3I,MAAOgF,EAAQuD,YAAa/J,GAON6J,CAAajJ,EAAMZ,IAAKsB,GAA/CyI,EAJiDH,EAIjDG,YAAavI,EAJoCoI,EAIpCpI,MACrB,OAAIA,EACKE,OAAAkH,EAAA,EAAAlH,CAAA,GAAKd,EAAZ,CAAmBZ,IAAK+J,EAAavI,UAGhCZ,GAGIK,EAAQ,SAACL,EAAyB6H,GAC7C,OAAQA,EAAOC,MACb,IAAK,uBACH,IAAIwC,EAActK,EAAM4B,QAMxB,OALA0I,EAAYvF,QAAQ,SAAAnD,IACuB,IAArCiG,EAAOnG,QAAQ6B,QAAQ3B,KACzB0I,EAAcA,EAAYnE,OAAO,SAAAoE,GAAE,OAAoC,IAAhC1C,EAAOnG,QAAQ6B,QAAQgH,QAG3DzJ,OAAAkH,EAAA,EAAAlH,CAAA,GACFd,EADL,CAEEuB,iBAAkBsG,EAAOnG,QACzBE,QAAS0I,IAEb,IAAK,wBACH,OAAOxJ,OAAAkH,EAAA,EAAAlH,CAAA,GACFd,EADL,CAEE4B,QAASiG,EAAOjG,QACbuE,OAAO,SAAAoE,GAAE,OAA4C,IAAxCvK,EAAMuB,iBAAiBgC,QAAQgH,KAC5CpE,OAAO,SAAAoE,GAAE,MAAW,gBAAPA,MAEpB,QACE,OAAOvK,IAcEwK,EAJMC,YAAgB,CACnCxK,IAP8B,SAACD,EAA6B6H,GAC5D,MAAoB,iBAAhBA,EAAOC,KACFJ,EAAY5G,OAAAkH,EAAA,EAAAlH,CAAA,GAAKyG,KAAwBM,GAE3CH,EAAY1H,EAAO6H,IAI1BzG,aApQ0B,WAA8E,IAA7EpB,EAA6E4H,UAAA7B,OAAA,QAAArG,IAAAkI,UAAA,GAAAA,UAAA,GDTvG,CACCvG,YAAa,WCQsEwG,EAAmBD,UAAA7B,OAAA,EAAA6B,UAAA,QAAAlI,EACxG,OAAQmI,EAAOC,MACb,IAAK,sBACH,OAAOhH,OAAAkH,EAAA,EAAAlH,CAAA,GAAKd,EAAZ,CAAmBqB,YAAawG,EAAO6C,QACzC,QACE,OAAO1K,MC/CP2K,EAAuB,SAACvF,GAC5B,OAAI9C,OAAOsI,aACFA,aAAaC,QAAQzF,GAEvB,MAGI0F,EAAgB,SAAe1F,EAAa2F,GACvD,IAAI/K,EAAQ+K,EACZ,IACE,IAAMC,EAAmBL,EAAqBvF,GAC1C4F,IACFhL,EAAQrB,KAAKM,MAAM+L,GACnBhL,EAAQkH,IAAO+D,MAAM,GAAI1D,IAAsBvH,IAEjD,MAAOnB,GACPC,YAASD,GAEX,OAAOmB,GCpCIkL,EAAiB,WAC5B,IAAMC,EAAWL,EAAc,yBAA0BvD,KACnD6D,EAAoBN,EAAc,6BHiDvC,CACCzJ,YAAa,YGhDTgK,EACc,kBAAX/I,QAAwBA,OAAegJ,qCACzChJ,OAAegJ,qCAAqC,IAGrDC,IAEAC,EAAQC,YAAYjB,EAAc,CAAEvK,IAAKkL,EAAU/J,aAAcgK,GAAqBC,KAO5F,OALAG,EAAME,UAAU,WDda,IAACC,EAKIvK,EALJuK,ECeZH,EAAMI,WAAW3L,IDd/BqC,OAAOsI,cACTA,aAAaiB,QAAQ,yBAA0BlN,KAAKC,UAAU+M,IAG9BvK,ECWZoK,EAAMI,WAAWxK,aDVnCkB,OAAOsI,cACTA,aAAaiB,QAAQ,6BAA8BlN,KAAKC,UAAUwC,MCY7DoK,kBCvBHjM,EAAM,IAAIuM,IAChBvM,EAAIwM,IAAI,UAAW,kBACjB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,SAAU,kBAChB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,YAAa,kBACnB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,SAAU,kBAChB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,SAAU,kBAChB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,UAAW,kBACjB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,SAAU,kBAChB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,MAAO,kBAAM7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eACrB1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,UAAW,kBACjB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,QAAS,kBACf7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,WAAY,kBAClB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,YAAa,kBACnB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,SAAU,kBAChB7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEF1M,EAAIwM,IAAI,OAAQ,kBAAM7N,EAAAsB,EAAA,IAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,eAEf,IAAMC,EAAyB,SAACxB,GACrC,GAAc,OAAVA,EAAgB,CAClB,IAAMyB,EAAc5M,EAAI+D,IAAIoH,GAC5B,GAAIyB,EACF,OAAOA,IAGX,OAAOC,QAAQC,OAAO,kCCpDb,eAAAC,EAAAxL,OAAAyL,EAAA,EAAAzL,CAAA0L,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAnB,EAAAoB,EAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAjD,MAAA,cACNyB,EAAQN,IADF8B,EAAAjD,KAAA,EAGWqC,QAAQc,IAAI,CACjChP,EAAAsB,EAAA,GAAA0D,KAAAhF,EAAA8N,EAAAC,KAAA,YACAG,QAAAc,IAAA,CAAAhP,EAAAsB,EAAA,GAAAtB,EAAAsB,EAAA,IAAAtB,EAAAsB,EAAA,KAAA0D,KAAAhF,EAAA+N,KAAA,WACAC,EAAuB/K,YAASqK,EAAMI,eAN5B,cAGNgB,EAHMI,EAAAG,KAAAH,EAAAjD,KAAA,EASNqD,eATM,OAWNP,EAAWD,EAAS,GACpBE,EAAMF,EAAS,GAAGS,QACxBR,EAASS,OACPC,EAAA,cAACA,EAAA,WAAD,KACEA,EAAA,cAACC,EAAA,EAAD,CAAUhC,MAAOA,GACf+B,EAAA,cAACT,EAAD,QAGJW,SAASC,eAAe,SAG1BC,IAtBY,yBAAAX,EAAAY,SAAAjB,EAAAkB,SAAH,yBAAAvB,EAAAhF,MAAAuG,KAAAjG,aAAA,EAyBXkG,mCCnCA5P,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAA2P,IAAA7P,EAAAC,EAAAC,EAAA,sBAAA4P,IAEO,IAAMlP,EAAW,SAACD,GAAoD,IAA7BoP,EAA6BrG,UAAA7B,OAAA,QAAArG,IAAAkI,UAAA,GAAAA,UAAA,QAAdlI,EAC7DqE,QAAQlF,MAAM,gBAAiBA,GACR,qBAAZoP,GACTlK,QAAQlF,MAAMoP,IAILF,EAAa,SAACzF,GAA8C,IAA7B2F,EAA6BrG,UAAA7B,OAAA,QAAArG,IAAAkI,UAAA,GAAAA,UAAA,QAAdlI,EAClC,qBAAZuO,GACTlK,QAAQmK,KAAK5F,GAEfvE,QAAQmK,KAAK5F,EAAS2F,IAGXD,EAAU,SAAC1F,GAA8C,IAA7B2F,EAA6BrG,UAAA7B,OAAA,QAAArG,IAAAkI,UAAA,GAAAA,UAAA,QAAdlI,EAC/B,qBAAZuO,GACTlK,QAAQoK,KAAK7F,GAEfvE,QAAQoK,KAAK7F,EAAS2F","file":"static/js/main.51024392.chunk.js","sourcesContent":["import { logError } from './logger'\n\nexport const jsonBeautify = (str: string) => {\n  if (!str || str.trim() === '') {\n    return ''\n  }\n\n  const parsed = jsonParseSafe(str)\n  if (typeof parsed === 'string') {\n    return parsed\n  }\n\n  try {\n    return JSON.stringify(parsed, null, 2)\n  } catch (error) {\n    logError(error, str)\n  }\n  return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n  if (!str || str.trim() === '') {\n    return null\n  }\n\n  const safeStr = str\n    .replace(/\\\\n/g, '\\\\n')\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, '\\\\&')\n    .replace(/\\\\r/g, '\\\\r')\n    .replace(/\\\\t/g, '\\\\t')\n    .replace(/\\\\b/g, '\\\\b')\n    .replace(/\\\\f/g, '\\\\f')\n    .replace(/[\\u0000-\\u0019]+/g, '')\n\n  try {\n    return JSON.parse(safeStr)\n  } catch (error) {\n    return str\n  }\n}\n","export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj\n    return array.map(e => customToString(e)).join(',')\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj)\n  }\n  if (typeof obj === 'undefined') {\n    return ''\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString()\n  }\n\n  return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true\n  }\n\n  return false\n}\n","import { RootState } from '../State/State'\n\nexport const getOutputErrorMessage = (state: RootState) => state.app.output.errorMessage\n\nexport const getOutputIsArray = (state: RootState) => state.app.output.table.isArray\nexport const getOutputActiveTab = (state: RootState) => state.app.output.selectedTab\nexport const getOutputObject = (state: RootState) => state.app.output.obj\nexport const getOutputSearchTerm = (state: RootState) => state.app.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => state.app.output.match\n\nexport const getOutputTableData = (state: RootState) => [...state.app.output.table.array]\n\nexport const getisOutputTableModalOpen = (state: RootState) => state.app.output.table.isModalOpen\n\nexport const getTheme = (state: RootState) => state.userSettings.globalTheme\n\nexport const getdisplayedColumns = (state: RootState) => [...state.app.output.table.displayedColumns]\nexport const getTableArray = (state: RootState) => [...state.app.output.table.array]\nexport const getColumns = (state: RootState) => [...state.app.output.table.columns]\nexport const getGroupBy = (state: RootState) => [...state.app.output.table.groupBy]\n\nexport const getQueryText = (state: RootState) => state.app.query.text\nexport const getSourceText = (state: RootState) => state.app.source.text\nexport const getQueryMode = (state: RootState) => state.app.query.mode\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree } from 'sql-parser'\nimport { jsonParseSafe } from './json'\n\nexport const computePath = (path: string[]) => {\n  if (!path || path.length === 0) {\n    return []\n  }\n  if (path[0] === 'data') {\n    const newPath = [...path]\n    newPath.shift()\n    return newPath\n  }\n\n  return path\n}\n\nconst mapWithFields = (v: object, fields: Field[]) => {\n  let mapped = v\n  if (fields[0].constructor !== nodes.Star) {\n    const temp: any = {}\n    fields.forEach(field => {\n      const value = _.get(mapped, field.field.values)\n      let key = field.field.value\n\n      if (field.field.value2) {\n        key = field.field.value2\n      }\n\n      if (field.name) {\n        key = field.name.value\n      }\n\n      temp[key] = value\n    })\n    mapped = temp\n  }\n\n  return mapped\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n  let fromPath: string[] = []\n\n  if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n    if (sqlTree.source.name.values[0] === 'data') {\n      fromPath = [...sqlTree.source.name.values]\n      fromPath.shift()\n    }\n  }\n\n  let result = _.chain(sourceDataObject)\n\n  if (fromPath && fromPath.length > 0) {\n    result = result.get(fromPath)\n  }\n  if (_.isArray(sourceDataObject)) {\n    return result\n      .filter(v => {\n        if (!sqlTree.where || !sqlTree.where.conditions) {\n          return true\n        }\n        const leftValue = sqlTree.where.conditions.left\n        const rightValue = sqlTree.where.conditions.right\n        const operation = sqlTree.where.conditions.operation\n        return compareOperands(operation, leftValue, rightValue, v)\n      })\n      .map(v => mapWithFields(v, sqlTree.fields))\n      .value()\n  } else {\n    return mapWithFields(result.value(), sqlTree.fields)\n  }\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n  try {\n    const sqlTree = parse(queryString)\n\n    if (sqlTree.source.name.values[0] !== 'data') {\n      return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n    }\n\n    const sourceDataObject: object = jsonParseSafe(sourceString)\n\n    const result = executeQuery(sqlTree, sourceDataObject)\n\n    return JSON.stringify(result)\n  } catch (e) {\n    return e\n  }\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n  if (operation) {\n    if (operation.toLowerCase() === 'or') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) ||\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) &&\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n  }\n\n  if (!left.value) {\n    return false\n  }\n\n  const leftValue = _.get(value, computePath(left.values))\n\n  if (operation === '=' && leftValue === right.value) {\n    return true\n  }\n  if (operation === '!=' && leftValue !== right.value) {\n    return true\n  }\n  if (operation === '<>' && leftValue !== right.value) {\n    return true\n  }\n\n  if (right.value) {\n    if (operation === '>' && leftValue > right.value) {\n      return true\n    }\n    if (operation === '>=' && leftValue >= right.value) {\n      return true\n    }\n    if (operation === '<' && leftValue < right.value) {\n      return true\n    }\n    if (operation === '<=' && leftValue <= right.value) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { QueryMode } from '../State/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode): string | null | Error => {\n  if (mode === 'Javascript') {\n    return jsEvaluation(sourceString, queryString)\n  } else if (mode === 'SQL') {\n    return sqlEvaluation(sourceString, queryString)\n  }\n\n  return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string) => {\n  if (!sourceString || sourceString.trim() === '') {\n    return null\n  }\n\n  if (!queryString || queryString.trim() === '') {\n    return null\n  }\n\n  try {\n    ;(window as any)._ = lodash\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString})\n      `\n    const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n    const type = typeof evaluatedQuery\n    if (type !== 'string') {\n      return null\n    }\n    return evaluatedQuery as string\n  } catch (error) {\n    return error\n  } finally {\n    ;(window as any)._ = undefined\n  }\n}\n","import initialStateJson from './default-state.json'\nimport { Theme } from '../Themes/themes.js'\nimport { DeepReadonly } from 'utility-types'\n\nexport type QueryState = DeepReadonly<{\n  text: string\n  mode: QueryMode\n}>\n\nexport type SourceState = DeepReadonly<{\n  text: string\n}>\n\nexport type tabType = 'RawJson' | 'Table'\n\nexport type OupoutState = Readonly<{\n  text: string\n  searchTerm: string\n  match: boolean\n  selectedTab: tabType\n  obj: object | null\n  errorMessage?: string\n  table: OupoutTableState\n}>\n\nexport type itemType = any\n\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type OupoutTableState = Readonly<{\n  array: itemType[]\n  isArray: boolean\n  isModalOpen: boolean\n  displayedColumns: string[]\n  columns: string[]\n  groupBy: string[]\n}>\n\nexport type UserSettingsState = DeepReadonly<{\n  globalTheme: Theme | null\n}>\n\nexport type AppState = Readonly<{\n  source: SourceState\n  query: QueryState\n  output: OupoutState\n  error?: Error\n}>\n\nexport type RootState = Readonly<{\n  app: AppState\n  userSettings: UserSettingsState\n}>\n\nexport const getInitialAppState = () => initialStateJson as AppState\nexport const getInitialUserSettingsState = () =>\n  ({\n    globalTheme: 'materia',\n  } as UserSettingsState)\n\nexport const emptyState: AppState = {\n  source: { text: '' },\n  query: { text: '', mode: 'Javascript' },\n  output: {\n    match: false,\n    text: '',\n    obj: {},\n    searchTerm: '',\n    selectedTab: 'RawJson',\n    table: { isArray: false, array: [], columns: [], displayedColumns: [], isModalOpen: false, groupBy: [] },\n  },\n}\n","import { combineReducers, Reducer } from 'redux'\nimport { Action, UpdateSource } from '../Actions/actions'\nimport { codeEvaluation } from '../helpers/code'\nimport { jsonParseSafe } from '../helpers/json'\nimport {\n  OupoutState,\n  QueryState,\n  AppState,\n  SourceState,\n  OupoutTableState,\n  getInitialAppState,\n  itemType,\n  UserSettingsState,\n  getInitialUserSettingsState,\n  QueryMode,\n  tabType,\n  emptyState,\n} from '../State/State'\nimport { logError, logWarning } from '../helpers/logger'\nimport { containsIgnoreCase } from '../helpers/string'\n\nexport const rootReducer = (rootState: AppState = getInitialAppState(), action: Action): AppState => {\n  if (action.type === 'CLEAR_EDITOR') {\n    return emptyState\n  }\n  const newState = {\n    ...rootState,\n    query: query(rootState.query, action),\n    source: source(rootState.source, action),\n  }\n\n  const newOutputState = output(newState.output, newState.source.text, newState.query.text, action, newState.query.mode)\n  return {\n    ...newState,\n    output: {\n      ...newOutputState,\n      table: table(newOutputState.table, action),\n    },\n  }\n}\n\nexport const crashReporter = (rootReducerFn: Reducer<AppState>, state: AppState, action: Action): AppState => {\n  try {\n    return rootReducerFn(state, action)\n  } catch (error) {\n    logError(error, state)\n    logWarning('You may need to clear local storage !!!')\n\n    return { ...state, error }\n  }\n}\n\nexport const sourceText = (state: SourceState, action: UpdateSource) => ({\n  ...state,\n  text: action.source,\n})\n\nexport const source = (state: SourceState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return sourceText(state, action)\n    default:\n      return state\n  }\n}\nexport const userSettings = (state: UserSettingsState = getInitialUserSettingsState(), action: Action) => {\n  switch (action.type) {\n    case 'SWITCH_GLOBAL_THEME':\n      return { ...state, globalTheme: action.theme }\n    default:\n      return state\n  }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return {\n        ...state,\n        text: action.query,\n      }\n    case 'UPDATE_QUERY_MODE':\n      return {\n        ...state,\n        mode: action.mode,\n        text: action.mode === 'Javascript' ? getInitialAppState().query.text : 'select * from data',\n      }\n    default:\n      return state\n  }\n}\n\nexport const outputTable = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      return { ...state, columns: action.columns }\n    default:\n      return state\n  }\n}\ninterface Map<T> {\n  [key: string]: T\n}\nexport const computeOutput = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n): OupoutState => {\n  const text = codeEvaluation(sourceString, queryString, mode)\n  if (text === null) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      searchTerm: '',\n      match: false,\n      table: {\n        array: [],\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n  if (text instanceof Error) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      searchTerm: '',\n      match: false,\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        array: [],\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n\n  let displayedColumns = new Array<string>()\n  const array: itemType[] = jsonParseSafe(text)\n  const isArray = Array.isArray(array)\n  if (isArray) {\n    const keyMap: Map<string> = {}\n    array\n      .filter(d => d)\n      .filter(d => typeof d === 'object')\n      .filter(d => !Object.is(d, {}))\n      .filter(d => !Array.isArray(d))\n      .map(d => (d ? Object.keys(d) : []))\n      .forEach(keysToAdd => {\n        keysToAdd.forEach(key => (keyMap[key] = key))\n      })\n    displayedColumns = Object.keys(keyMap)\n      .filter(key => key)\n      .filter(key => typeof key === 'string')\n      .filter(key => key.trim() !== '')\n      .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n  }\n  const isModalOpen =\n    action.type === 'TOGGLE_OUTPUT_TABLE_MODAL' ? !previousState.table.isModalOpen : previousState.table.isModalOpen\n\n  let selectedTab: tabType = isArray ? 'Table' : 'RawJson'\n\n  if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n    selectedTab = action.tab\n  }\n  return {\n    selectedTab,\n    text,\n    obj: jsonParseSafe(text),\n    searchTerm: '',\n    match: false,\n    table: {\n      array: isArray ? array : [],\n      isArray,\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: [],\n    },\n  }\n}\n\nexport const output = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n): OupoutState => {\n  switch (action.type) {\n    case '@@INIT':\n    case 'EVALUATE_CODE':\n    case 'RESET_EDITOR':\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      return computeOutput(previousState, sourceString, queryString, action, mode)\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return {\n        ...previousState,\n        table: {\n          ...previousState.table,\n          isModalOpen: !previousState.table.isModalOpen,\n        },\n      }\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      return {\n        ...previousState,\n        selectedTab: action.tab,\n      }\n    case 'UPDATE_OUTPUT_SEARCH_TERM':\n      return {\n        ...filter(computeOutput(previousState, sourceString, queryString, action, mode), action.searchTerm),\n        searchTerm: action.searchTerm,\n        selectedTab: 'RawJson',\n      }\n    default:\n      return previousState\n  }\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n  if (typeof src !== 'string' && typeof src !== 'object') {\n    return { match: false, filteredObj: src }\n  }\n\n  if (typeof src === 'string') {\n    if (containsIgnoreCase(src, searchTerm)) {\n      return { match: true, filteredObj: src }\n    }\n    return { match: false, filteredObj: src }\n  }\n  const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n  const keys = Array.isArray(obj)\n    ? Array.from({ length: obj.length }, (_, k) => k)\n    : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n  let result = false\n\n  for (const propertyName of keys) {\n    const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n    if (propertyNameContains) {\n      result = true\n      continue\n    }\n    const child = obj[propertyName]\n    const { match, filteredObj } = containsTerm(child, searchTerm)\n    if (propertyNameContains || match) {\n      result = true\n      obj[propertyName] = filteredObj\n    } else {\n      if (Array.isArray(obj) && typeof propertyName === 'number') {\n        obj.splice(propertyName, 1)\n      } else {\n        delete obj[propertyName]\n      }\n    }\n  }\n  if (!result) {\n    if (!Array.isArray(obj)) {\n      ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n    } else {\n      obj.length = 0\n    }\n  }\n  return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n  if (!searchTerm && searchTerm.trim() === '') {\n    return { ...state, match: false }\n  }\n  const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n  if (match) {\n    return { ...state, obj: filteredObj, match }\n  }\n\n  return state\n}\n\nexport const table = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = state.groupBy\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n        }\n      })\n      return {\n        ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList,\n      }\n    case 'UPDATE_TABLE_GROUP_BY':\n      return {\n        ...state,\n        groupBy: action.groupBy\n          .filter(gb => state.displayedColumns.indexOf(gb) !== -1)\n          .filter(gb => gb !== 'Group by...'),\n      }\n    default:\n      return state\n  }\n}\n\nexport const rootReducerReset = (state: AppState | undefined, action: Action) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getInitialAppState() }, action)\n  }\n  return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n  app: rootReducerReset,\n  userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getInitialAppState } from '../State/State'\nimport { logError } from '../helpers/logger'\nimport lodash from 'lodash'\n\nexport const persistAppState = (appstate: AppState) => {\n  if (window.localStorage) {\n    localStorage.setItem('keyrier-json.app.state', JSON.stringify(appstate))\n  }\n}\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n  if (window.localStorage) {\n    localStorage.setItem('keyrier-json.user.settings', JSON.stringify(userSettings))\n  }\n}\n\nexport const loadAppState = () => {\n  return loadFromLocalStorage('keyrier-json.app.state')\n}\n\nexport const loadUserSettingsState = () => {\n  return loadFromLocalStorage('keyrier-json.user.settings')\n}\n\nconst loadFromLocalStorage = (key: string) => {\n  if (window.localStorage) {\n    return localStorage.getItem(key)\n  }\n  return null\n}\n\nexport const loadOrdCreate = <T extends {}>(key: string, defaultValue: T) => {\n  let state = defaultValue\n  try {\n    const savedStateString = loadFromLocalStorage(key)\n    if (savedStateString) {\n      state = JSON.parse(savedStateString)\n      state = lodash.merge({}, getInitialAppState(), state)\n    }\n  } catch (error) {\n    logError(error)\n  }\n  return state\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from '../Reducers/reducers'\nimport { getInitialAppState, getInitialUserSettingsState } from '../State/State'\nimport { loadOrdCreate, persistAppState, persistUserSettings } from './persistence'\n\nexport const configureStore = () => {\n  const AppState = loadOrdCreate('keyrier-json.app.state', getInitialAppState())\n  const UserSettingsState = loadOrdCreate('keyrier-json.user.settings', getInitialUserSettingsState())\n\n  const composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        })\n      : compose\n\n  const store = createStore(rootReducers, { app: AppState, userSettings: UserSettingsState }, composeEnhancers())\n\n  store.subscribe(() => {\n    persistAppState(store.getState().app)\n    persistUserSettings(store.getState().userSettings)\n  })\n\n  return store\n}\n","const map = new Map<Theme, () => Promise<unknown>>()\nmap.set('materia', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css')\n)\nmap.set('darkly', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css')\n)\nmap.set('sandstone', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css')\n)\nmap.set('cosmo', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')\n)\nmap.set('cyborg', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css')\n)\nmap.set('flatly', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css')\n)\nmap.set('journal', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css')\n)\nmap.set('litera', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css')\n)\nmap.set('lumen', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')\n)\nmap.set('lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css'))\nmap.set('minty', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')\n)\nmap.set('pulse', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')\n)\nmap.set('simplex', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css')\n)\nmap.set('slate', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')\n)\nmap.set('solar', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')\n)\nmap.set('spacelab', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css')\n)\nmap.set('superhero', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css')\n)\nmap.set('united', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css')\n)\nmap.set('yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css'))\n\nexport const importThemeStyleCustom = (theme: Theme | null) => {\n  if (theme !== null) {\n    const themeLoader = map.get(theme)\n    if (themeLoader) {\n      return themeLoader()\n    }\n  }\n  return Promise.reject('theme is not defined')\n}\n\nexport type Theme =\n  | 'materia'\n  | 'darkly'\n  | 'sandstone'\n  | 'cosmo'\n  | 'cyborg'\n  | 'flatly'\n  | 'journal'\n  | 'litera'\n  | 'lumen'\n  | 'lux'\n  | 'minty'\n  | 'pulse'\n  | 'simplex'\n  | 'slate'\n  | 'solar'\n  | 'spacelab'\n  | 'superhero'\n  | 'united'\n  | 'yeti'\n","import { Provider } from 'react-redux'\nimport './index.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport registerServiceWorker from './registerServiceWorker'\nimport { configureStore } from './Store/store'\nimport * as React from 'react'\nimport { getTheme } from './Store/selectors'\nimport { importThemeStyleCustom } from './Themes/themes'\nimport * as Loadable from 'react-loadable'\n\nconst start = async () => {\n  const store = configureStore()\n\n  const promises = await Promise.all([\n    import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n    import(/* webpackChunkName: \"App\" */ './Components/App'),\n    importThemeStyleCustom(getTheme(store.getState())),\n  ])\n\n  await Loadable.preloadAll()\n\n  const ReactDOM = promises[0]\n  const App = promises[1].default\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root') as HTMLElement\n  )\n\n  registerServiceWorker()\n}\n\nstart()\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload: any = undefined) => {\n  console.error('Keyrier error', error)\n  if (typeof payload !== 'undefined') {\n    console.error(payload)\n  }\n}\n\nexport const logWarning = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.warn(message)\n  }\n  console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.info(message)\n  }\n  console.info(message, payload)\n}\n"],"sourceRoot":""}