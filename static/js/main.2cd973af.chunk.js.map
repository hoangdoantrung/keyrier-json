{"version":3,"sources":["helpers/string.ts","Store/selectors.ts","Themes/themes.ts","helpers/logger.ts","registerServiceWorker.ts","helpers/json.ts","helpers/sql.ts","helpers/code.ts","State/State.ts","Reducers/reducers.ts","Store/persistence.ts","Store/store.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","customToString","containsIgnoreCase","prettyPrintBytes","obj","Array","isArray","map","e","join","JSON","stringify","undefined","toString","str","part","toLocaleLowerCase","includes","UNITS","toLocaleString","value","locale","arguments","length","result","signed","Number","isFinite","TypeError","concat","isNegative","prefix","exponent","Math","min","floor","log10","pow","toPrecision","getOutputErrorMessage","state","app","output","errorMessage","getOutputIsArray","table","getOutputActiveTab","selectedTab","getOutputObject","getOutputObjectSize","objSize","getOutputSearchTerm","searchTerm","getOutputSearchMatch","match","getisOutputTableModalOpen","isModalOpen","getTheme","userSettings","globalTheme","getdisplayedColumns","Object","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","displayedColumns","getOutputarray","getColumns","columns","getGroupBy","groupBy","getQueryText","query","text","getQueryMode","mode","getSourceText","source","getSourceAutoFormat","autoFormat","importThemeStyleCustom","availableThemes","Map","set","then","t","bind","theme","themeLoader","get","Promise","reject","logError","logWarning","logInfo","error","payload","console","message","warn","info","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","jsonBeautify","trim","parsed","jsonParseSafe","safeStr","replace","parse","v","fields","mapped","constructor","nodes","Star","x","mapObject","sqlEvaluation","sourceString","queryString","sqlTree","name","values","Error","sourceDataObject","fromPath","toConsumableArray","shift","_","chain","filter","where","conditions","leftValue","left","rightValue","right","operation","compareOperands","executeQuery","toLowerCase","path","newPath","computePath","temp","forEach","field","key","value2","jsEvaluation","lodash","code","evaluatedQuery","eval","apply","getInitialAppState","initialStateJson","emptyState","rootReducer","rootState","action","type","newState","objectSpread","newOutputState","active","computeOutput","previousState","codeEvaluation","outputObject","keyMap","is","keys","keysToAdd","sort","ax","b","localeCompare","tab","_containsTerm2","containsTerm","src","filteredObj","from","k","getOwnPropertyNames","propertyName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","propertyNameContains","_containsTerm","splice","err","return","groupByList","gb","rootReducers","combineReducers","concurrentModeEnable","persist","storage","getStorage","toBeSaved","setItem","toast","loadFromStorage","getItem","getDefault","load","savedStateString","merge","localStorage","sessionStorage","configureStore","appState","userSettingsState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","subscribe","appstate","getState","asyncToGenerator","regenerator_default","a","mark","_callee","promises","ReactDOM","App","Concurrent","wrap","_context","prev","all","resolve","sent","default","React","unstable_createRoot","document","getElementById","render","react","es","Loadable","registerServiceWorker","stop"],"mappings":"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","file":"static/js/main.2cd973af.chunk.js","sourcesContent":["export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj\n    return array.map(e => customToString(e)).join(',')\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj)\n  }\n  if (typeof obj === 'undefined') {\n    return ''\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString()\n  }\n\n  return ''\n}\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true\n  }\n\n  return false\n}\n\nconst UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\nconst toLocaleString = (value: number, locale: boolean | string = false) => {\n  let result = value.toString()\n  if (typeof locale === 'string') {\n    result = value.toLocaleString(locale)\n  } else if (locale === true) {\n    result = value.toLocaleString()\n  }\n\n  return result\n}\n\nexport const prettyPrintBytes = (value: number, signed = false, locale: boolean | string = false) => {\n  if (!Number.isFinite(value)) {\n    throw new TypeError(`Expected a finite number, got ${typeof value}: ${value}`)\n  }\n  if (value === 0) {\n    return '0 B'\n  }\n  const isNegative = value < 0\n  const prefix = isNegative ? '-' : signed ? '+' : ''\n  if (isNegative) {\n    value = -value\n  }\n  if (value < 1) {\n    const numberStr = toLocaleString(value, locale ? locale : false)\n    return prefix + numberStr + ' B'\n  }\n  const exponent = Math.min(Math.floor(Math.log10(value) / 3), UNITS.length - 1)\n  value = Number((value / Math.pow(1024, exponent)).toPrecision(3))\n  const numberString = toLocaleString(value, locale ? locale : false)\n  const unit = UNITS[exponent]\n  return prefix + numberString + ' ' + unit\n}\n","import { RootState } from '../State/State'\n\nexport const getOutputErrorMessage = (state: RootState) => state.app.output.errorMessage\n\nexport const getOutputIsArray = (state: RootState) => state.app.output.table.isArray\nexport const getOutputActiveTab = (state: RootState) => state.app.output.selectedTab\nexport const getOutputObject = (state: RootState) => state.app.output.obj\nexport const getOutputObjectSize = (state: RootState) => state.app.output.objSize\nexport const getOutputSearchTerm = (state: RootState) => state.app.output.searchTerm\nexport const getOutputSearchMatch = (state: RootState) => state.app.output.match\nexport const getisOutputTableModalOpen = (state: RootState) => state.app.output.table.isModalOpen\n\nexport const getTheme = (state: RootState) => state.userSettings.globalTheme\n\nexport const getdisplayedColumns = (state: RootState) => [...state.app.output.table.displayedColumns]\nexport const getOutputarray = (state: RootState) =>\n  Array.isArray(state.app.output.obj) ? [...state.app.output.obj] : []\nexport const getColumns = (state: RootState) => [...state.app.output.table.columns]\nexport const getGroupBy = (state: RootState) => [...state.app.output.table.groupBy]\n\nexport const getQueryText = (state: RootState) => state.app.query.text\nexport const getQueryMode = (state: RootState) => state.app.query.mode\n\nexport const getSourceText = (state: RootState) => state.app.source.text\nexport const getSourceAutoFormat = (state: RootState) => state.app.source.autoFormat\n","const map = new Map<Theme, () => Promise<unknown>>()\nmap.set('materia', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/materia\" */ 'bootswatch/dist/materia/bootstrap.min.css')\n)\nmap.set('darkly', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/darkly\" */ 'bootswatch/dist/darkly/bootstrap.min.css')\n)\nmap.set('sandstone', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/sandstone\" */ 'bootswatch/dist/sandstone/bootstrap.min.css')\n)\nmap.set('cosmo', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/cosmo\" */ 'bootswatch/dist/cosmo/bootstrap.min.css')\n)\nmap.set('cyborg', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/cyborg\" */ 'bootswatch/dist/cyborg/bootstrap.min.css')\n)\nmap.set('flatly', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/flatly\" */ 'bootswatch/dist/flatly/bootstrap.min.css')\n)\nmap.set('journal', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/journal\" */ 'bootswatch/dist/journal/bootstrap.min.css')\n)\nmap.set('litera', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/litera\" */ 'bootswatch/dist/litera/bootstrap.min.css')\n)\nmap.set('lumen', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/lumen\" */ 'bootswatch/dist/lumen/bootstrap.min.css')\n)\nmap.set('lux', () => import(/* webpackChunkName: \"bootswatch/dist/lux\" */ 'bootswatch/dist/lux/bootstrap.min.css'))\nmap.set('minty', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/minty\" */ 'bootswatch/dist/minty/bootstrap.min.css')\n)\nmap.set('pulse', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/pulse\" */ 'bootswatch/dist/pulse/bootstrap.min.css')\n)\nmap.set('simplex', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/simplex\" */ 'bootswatch/dist/simplex/bootstrap.min.css')\n)\nmap.set('slate', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/slate\" */ 'bootswatch/dist/slate/bootstrap.min.css')\n)\nmap.set('solar', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/solar\" */ 'bootswatch/dist/solar/bootstrap.min.css')\n)\nmap.set('spacelab', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/spacelab\" */ 'bootswatch/dist/spacelab/bootstrap.min.css')\n)\nmap.set('superhero', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/superhero\" */ 'bootswatch/dist/superhero/bootstrap.min.css')\n)\nmap.set('united', () =>\n  import(/* webpackChunkName: \"bootswatch/dist/united\" */ 'bootswatch/dist/united/bootstrap.min.css')\n)\nmap.set('yeti', () => import(/* webpackChunkName: \"bootswatch/dist/yeti\" */ 'bootswatch/dist/yeti/bootstrap.min.css'))\n\nexport const importThemeStyleCustom = (theme: Theme | null) => {\n  if (theme !== null) {\n    const themeLoader = map.get(theme)\n    if (themeLoader) {\n      return themeLoader()\n    }\n  }\n  return Promise.reject('theme is not defined')\n}\n\nexport type Theme =\n  | 'materia'\n  | 'darkly'\n  | 'sandstone'\n  | 'cosmo'\n  | 'cyborg'\n  | 'flatly'\n  | 'journal'\n  | 'litera'\n  | 'lumen'\n  | 'lux'\n  | 'minty'\n  | 'pulse'\n  | 'simplex'\n  | 'slate'\n  | 'solar'\n  | 'spacelab'\n  | 'superhero'\n  | 'united'\n  | 'yeti'\n\nexport const availableThemes: Theme[] = [\n  'materia',\n  'darkly',\n  'sandstone',\n  'cosmo',\n  'cyborg',\n  'flatly',\n  'journal',\n  'litera',\n  'lumen',\n  'lux',\n  'minty',\n  'pulse',\n  'simplex',\n  'slate',\n  'solar',\n  'spacelab',\n  'superhero',\n  'united',\n  'yeti',\n]\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload: any = undefined) => {\n  console.error('Keyrier error', error)\n  if (typeof payload !== 'undefined') {\n    console.error(payload)\n  }\n}\n\nexport const logWarning = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.warn(message)\n  }\n  console.warn(message, payload)\n}\n\nexport const logInfo = (message: string, payload: any = undefined) => {\n  if (typeof payload === 'undefined') {\n    console.info(message)\n  }\n  console.info(message, payload)\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.')\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.')\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { logError } from './logger'\n\nexport const jsonBeautify = (str: string) => {\n  if (!str || str.trim() === '') {\n    return ''\n  }\n\n  const parsed = jsonParseSafe(str)\n  if (typeof parsed === 'string') {\n    return parsed\n  }\n\n  try {\n    return JSON.stringify(parsed, null, 2)\n  } catch (error) {\n    logError(error, str)\n  }\n  return str\n}\n\nexport const jsonParseSafe = (str: string) => {\n  if (!str || str.trim() === '') {\n    return null\n  }\n\n  const safeStr = str\n    .replace(/\\\\n/g, '\\\\n')\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, '\\\\&')\n    .replace(/\\\\r/g, '\\\\r')\n    .replace(/\\\\t/g, '\\\\t')\n    .replace(/\\\\b/g, '\\\\b')\n    .replace(/\\\\f/g, '\\\\f')\n    .replace(/[\\u0000-\\u0019]+/g, '')\n\n  try {\n    return JSON.parse(safeStr)\n  } catch (error) {\n    return str\n  }\n}\n","import _ from 'lodash'\nimport { parse, nodes, Op, Field, SQLTree } from 'sql-parser'\nimport { jsonParseSafe } from './json'\n\nexport const computePath = (path: string[]) => {\n  if (!path || path.length === 0) {\n    return []\n  }\n  if (path[0] === 'data') {\n    const newPath = [...path]\n    newPath.shift()\n    return newPath\n  }\n\n  return path\n}\n\nconst map = (v: object, fields: Field[]) => {\n  // tslint:disable-next-line:no-debugger\n  debugger\n  let mapped = v\n  if (fields[0].constructor !== nodes.Star) {\n    if (!Array.isArray(mapped)) {\n      mapped = mapObject(fields, mapped)\n    } else {\n      mapped = mapped.map(x => mapObject(fields, x))\n    }\n  }\n\n  return mapped\n}\n\nconst executeQuery = (sqlTree: SQLTree, sourceDataObject: object) => {\n  let fromPath: string[] = []\n\n  if (sqlTree.source.name.values && sqlTree.source.name.values.length > 1) {\n    if (sqlTree.source.name.values[0] === 'data') {\n      fromPath = [...sqlTree.source.name.values]\n      fromPath.shift()\n    }\n  }\n\n  let result = _.chain(sourceDataObject)\n\n  if (fromPath && fromPath.length > 0) {\n    result = result.get(fromPath)\n  }\n  if (_.isArray(sourceDataObject)) {\n    return result\n      .filter(v => {\n        if (!sqlTree.where || !sqlTree.where.conditions) {\n          return true\n        }\n        const leftValue = sqlTree.where.conditions.left\n        const rightValue = sqlTree.where.conditions.right\n        const operation = sqlTree.where.conditions.operation\n        return compareOperands(operation, leftValue, rightValue, v)\n      })\n      .map(v => map(v, sqlTree.fields))\n      .value()\n  } else {\n    return map(result.value(), sqlTree.fields)\n  }\n}\n\nexport const sqlEvaluation = (sourceString: string, queryString: string) => {\n  try {\n    const sqlTree = parse(queryString)\n\n    if (sqlTree.source.name.values[0] !== 'data') {\n      return new Error(`${sqlTree.source.name.values[0]} table does not exist`)\n    }\n\n    const sourceDataObject: object = jsonParseSafe(sourceString)\n\n    const result = executeQuery(sqlTree, sourceDataObject)\n\n    return JSON.stringify(result)\n  } catch (e) {\n    return e\n  }\n}\n\nconst compareOperands = (operation: string | null, left: Op, right: Op, value: object): boolean => {\n  if (operation) {\n    if (operation.toLowerCase() === 'or') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) ||\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n\n    if (operation.toLowerCase() === 'and') {\n      return (\n        compareOperands(left.operation, left.left, left.right, value) &&\n        compareOperands(right.operation, right.left, right.right, value)\n      )\n    }\n  }\n\n  if (!left.value) {\n    return false\n  }\n\n  if (!operation) {\n    return false\n  }\n\n  const leftValue = _.get(value, computePath(left.values))\n\n  if (operation === '=' && leftValue === right.value) {\n    return true\n  }\n  if (operation.toLowerCase() === 'is' && leftValue === right.value) {\n    return true\n  }\n  if (operation === '!=' && leftValue !== right.value) {\n    return true\n  }\n  if (operation.toLowerCase() === 'is not' && leftValue !== right.value) {\n    return true\n  }\n  if (operation === '<>' && leftValue !== right.value) {\n    return true\n  }\n\n  if (right.value) {\n    if (operation === '>' && leftValue > right.value) {\n      return true\n    }\n    if (operation === '>=' && leftValue >= right.value) {\n      return true\n    }\n    if (operation === '<' && leftValue < right.value) {\n      return true\n    }\n    if (operation === '<=' && leftValue <= right.value) {\n      return true\n    }\n  }\n\n  return false\n}\nconst mapObject = (fields: Field[], mapped: object) => {\n  const temp: {\n    [key: string]: any\n  } = {}\n  fields.forEach(field => {\n    const value = _.get(mapped, field.field.values)\n    let key = field.field.value\n    if (field.field.value2) {\n      key = field.field.value2\n    }\n    if (field.name) {\n      key = field.name.value\n    }\n    temp[key] = value\n  })\n  mapped = temp\n  return mapped\n}\n","import { QueryMode } from '../State/State'\nimport { sqlEvaluation } from './sql'\nimport lodash from 'lodash'\n\nexport const codeEvaluation = (sourceString: string, queryString: string, mode: QueryMode): string | null | Error => {\n  if (mode === 'Javascript') {\n    return jsEvaluation(sourceString, queryString)\n  } else if (mode === 'SQL') {\n    return sqlEvaluation(sourceString, queryString)\n  }\n\n  return new Error('unsupported mode')\n}\n\nconst jsEvaluation = (sourceString: string, queryString: string) => {\n  if (!sourceString || sourceString.trim() === '') {\n    return null\n  }\n\n  if (!queryString || queryString.trim() === '') {\n    return null\n  }\n\n  try {\n    ;(window as any)._ = lodash\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString})\n      `\n    const evaluatedQuery = eval.apply(null, [code]) // DANGEROUS\n    const type = typeof evaluatedQuery\n    if (type !== 'string') {\n      return null\n    }\n    return evaluatedQuery as string\n  } catch (error) {\n    return error\n  } finally {\n    ;(window as any)._ = undefined\n  }\n}\n","import initialStateJson from './default-state.json'\nimport { Theme } from '../Themes/themes.js'\nimport { DeepReadonly } from 'utility-types'\n\nexport type QueryState = DeepReadonly<{\n  text: string\n  mode: QueryMode\n}>\n\nexport type SourceState = DeepReadonly<{\n  text: string\n  autoFormat: boolean\n}>\n\nexport type tabType = 'RawJson' | 'Table'\n\nexport type OupoutState = Readonly<{\n  text: string\n  searchTerm: string\n  match: boolean\n  selectedTab: tabType\n  obj: object | null\n  objSize: number\n  errorMessage?: string\n  table: OupoutTableState\n}>\n\nexport type itemType = any\n\nexport type QueryMode = 'Javascript' | 'SQL'\n\nexport type OupoutTableState = Readonly<{\n  isArray: boolean\n  isModalOpen: boolean\n  displayedColumns: string[]\n  columns: string[]\n  groupBy: string[]\n}>\n\nexport type UserSettingsState = DeepReadonly<{\n  globalTheme: Theme | null\n  concurrentModeEnable: boolean\n}>\n\nexport type AppState = Readonly<{\n  source: SourceState\n  query: QueryState\n  output: OupoutState\n  error?: Error\n}>\n\nexport type RootState = Readonly<{\n  app: AppState\n  userSettings: UserSettingsState\n}>\n\nexport const getInitialAppState = () => initialStateJson as AppState\nexport const getInitialUserSettingsState = () => ({\n  globalTheme: 'materia' as Theme,\n  concurrentModeEnable: false,\n})\n\nexport const emptyState: AppState = {\n  source: { text: '', autoFormat: true },\n  query: { text: '', mode: 'Javascript' },\n  output: {\n    match: false,\n    text: '',\n    obj: {},\n    objSize: 2,\n    searchTerm: '',\n    selectedTab: 'RawJson',\n    table: {\n      isArray: false,\n      columns: [],\n      displayedColumns: [],\n      isModalOpen: false,\n      groupBy: [],\n    },\n  },\n}\n","import { combineReducers, Reducer } from 'redux'\nimport { Action } from '../Actions/actions'\nimport { codeEvaluation } from '../helpers/code'\nimport { jsonParseSafe, jsonBeautify } from '../helpers/json'\nimport {\n  OupoutState,\n  QueryState,\n  AppState,\n  SourceState,\n  OupoutTableState,\n  getInitialAppState,\n  itemType,\n  UserSettingsState,\n  getInitialUserSettingsState,\n  QueryMode,\n  tabType,\n  emptyState,\n} from '../State/State'\nimport { logError, logWarning } from '../helpers/logger'\nimport { containsIgnoreCase } from '../helpers/string'\n\nexport const rootReducer = (rootState: AppState = getInitialAppState(), action: Action): AppState => {\n  if (action.type === 'CLEAR_EDITOR') {\n    return emptyState\n  }\n  const newState = {\n    ...rootState,\n    query: query(rootState.query, action),\n    source: source(rootState.source, action),\n  }\n\n  const newOutputState = output(rootState, newState, action)\n  return {\n    ...newState,\n    output: {\n      ...newOutputState,\n      table: table(newOutputState.table, action),\n    },\n  }\n}\n\nexport const crashReporter = (rootReducerFn: Reducer<AppState>, state: AppState, action: Action): AppState => {\n  try {\n    return rootReducerFn(state, action)\n  } catch (error) {\n    logError(error, state)\n    logWarning('You may need to clear local storage !!!')\n\n    return { ...state, error }\n  }\n}\n\nexport const source = (state: SourceState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return {\n        ...state,\n        text: state.autoFormat ? jsonBeautify(action.source.trim()) : action.source,\n      }\n    case 'UPDATE_AUTOFORMAT_SOURCE':\n      return { ...state, text: action.active ? jsonBeautify(state.text.trim()) : state.text, autoFormat: action.active }\n    default:\n      return state\n  }\n}\nexport const userSettings = (state: UserSettingsState = getInitialUserSettingsState(), action: Action) => {\n  switch (action.type) {\n    case 'SWITCH_GLOBAL_THEME':\n      return { ...state, globalTheme: action.theme }\n    default:\n      return state\n  }\n}\n\nexport const query = (state: QueryState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return {\n        ...state,\n        text: action.query.trim(),\n      }\n    case 'UPDATE_QUERY_MODE':\n      return {\n        ...state,\n        mode: action.mode,\n        text: action.mode === 'Javascript' ? getInitialAppState().query.text : 'select * from data',\n      }\n    default:\n      return state\n  }\n}\n\nexport const outputTable = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      return { ...state, columns: action.columns }\n    default:\n      return state\n  }\n}\ninterface Map<T> {\n  [key: string]: T\n}\nexport const computeOutput = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action,\n  mode: QueryMode\n): OupoutState => {\n  const text = codeEvaluation(sourceString, queryString, mode)\n\n  if (text === null) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      objSize: 0,\n      searchTerm: '',\n      match: false,\n      table: {\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n  if (text instanceof Error) {\n    return {\n      selectedTab: 'RawJson',\n      text: '',\n      obj: null,\n      objSize: 0,\n      searchTerm: '',\n      match: false,\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    }\n  }\n\n  let displayedColumns = new Array<string>()\n  const outputObject: itemType[] | object = jsonParseSafe(text)\n  if (Array.isArray(outputObject)) {\n    const keyMap: Map<string> = {}\n    outputObject\n      .filter(d => d)\n      .filter(d => typeof d === 'object')\n      .filter(d => !Object.is(d, {}))\n      .filter(d => !Array.isArray(d))\n      .map(d => (d ? Object.keys(d) : []))\n      .forEach(keysToAdd => {\n        keysToAdd.forEach(key => (keyMap[key] = key))\n      })\n    displayedColumns = Object.keys(keyMap)\n      .filter(key => key)\n      .filter(key => typeof key === 'string')\n      .filter(key => key.trim() !== '')\n      .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()))\n  }\n  const isModalOpen =\n    action.type === 'TOGGLE_OUTPUT_TABLE_MODAL' ? !previousState.table.isModalOpen : previousState.table.isModalOpen\n\n  let selectedTab: tabType = Array.isArray(outputObject) ? 'Table' : 'RawJson'\n\n  if (action.type === 'UPDATE_OUTPUT_TAB_SELECTION') {\n    selectedTab = action.tab\n  }\n  return {\n    selectedTab,\n    text,\n    obj: outputObject,\n    objSize: text ? text.length : 0,\n    searchTerm: '',\n    match: false,\n    table: {\n      isArray: Array.isArray(outputObject),\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: [],\n    },\n  }\n}\n\nexport const output = (previousState: AppState, newState: AppState, action: Action): OupoutState => {\n  switch (action.type) {\n    case '@@INIT':\n      return computeOutput(newState.output, newState.source.text, newState.query.text, action, newState.query.mode)\n    case 'EVALUATE_CODE':\n    case 'RESET_EDITOR':\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n      return previousState.source.text === newState.source.text && previousState.query.text === newState.query.text\n        ? previousState.output\n        : computeOutput(newState.output, newState.source.text, newState.query.text, action, newState.query.mode)\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return {\n        ...newState.output,\n        table: {\n          ...newState.output.table,\n          isModalOpen: !newState.output.table.isModalOpen,\n        },\n      }\n    case 'UPDATE_OUTPUT_TAB_SELECTION':\n      return {\n        ...newState.output,\n        selectedTab: action.tab,\n      }\n    case 'UPDATE_OUTPUT_SEARCH_TERM':\n      return {\n        ...filter(newState.output, action.searchTerm),\n        searchTerm: action.searchTerm,\n        selectedTab: 'RawJson',\n      }\n    default:\n      return newState.output\n  }\n}\n\nexport const containsTerm = (src: any | any[] | null, searchTerm: string) => {\n  if (typeof src !== 'string' && typeof src !== 'object') {\n    return { match: false, filteredObj: src }\n  }\n\n  if (typeof src === 'string') {\n    if (containsIgnoreCase(src, searchTerm)) {\n      return { match: true, filteredObj: src }\n    }\n    return { match: false, filteredObj: src }\n  }\n  const obj: { [key: string]: any } = Array.isArray(src) ? [...src] : { ...src }\n\n  const keys = Array.isArray(obj)\n    ? Array.from({ length: obj.length }, (_, k) => k)\n    : Object.getOwnPropertyNames(obj).filter(propertyName => propertyName)\n\n  let result = false\n\n  for (const propertyName of keys) {\n    const propertyNameContains = typeof propertyName === 'string' && containsIgnoreCase(propertyName, searchTerm)\n    if (propertyNameContains) {\n      result = true\n      continue\n    }\n    const child = obj[propertyName]\n    const { match, filteredObj } = containsTerm(child, searchTerm)\n    if (propertyNameContains || match) {\n      result = true\n      obj[propertyName] = filteredObj\n    } else {\n      if (Array.isArray(obj) && typeof propertyName === 'number') {\n        obj.splice(propertyName, 1)\n      } else {\n        delete obj[propertyName]\n      }\n    }\n  }\n  if (!result) {\n    if (!Array.isArray(obj)) {\n      ;(keys as string[]).forEach((propertyName: string) => delete obj[propertyName])\n    } else {\n      obj.length = 0\n    }\n  }\n  return { match: result, filteredObj: obj }\n}\n\nconst filter = (state: OupoutState, searchTerm: string) => {\n  if (!searchTerm && searchTerm.trim() === '') {\n    return { ...state, match: false }\n  }\n  const { filteredObj, match } = containsTerm(state.obj, searchTerm)\n  if (match) {\n    return { ...state, obj: filteredObj, match }\n  }\n\n  return state\n}\n\nexport const table = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = state.groupBy\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(gb => action.columns.indexOf(gb) !== -1)\n        }\n      })\n      return {\n        ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList,\n      }\n    case 'UPDATE_TABLE_GROUP_BY':\n      return {\n        ...state,\n        groupBy: action.groupBy\n          .filter(gb => state.displayedColumns.indexOf(gb) !== -1)\n          .filter(gb => gb !== 'Group by...'),\n      }\n    default:\n      return state\n  }\n}\n\nexport const rootReducerReset = (state: AppState | undefined, action: Action) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getInitialAppState() }, action)\n  }\n  return rootReducer(state, action)\n}\nconst rootReducers = combineReducers({\n  app: rootReducerReset,\n  userSettings,\n})\nexport default rootReducers\n","import { AppState, UserSettingsState, getInitialAppState, getInitialUserSettingsState } from '../State/State'\nimport { logError } from '../helpers/logger'\nimport lodash from 'lodash'\nimport { toast } from 'react-toastify'\nimport { prettyPrintBytes } from '../helpers/string'\n\ntype StorageKey = 'keyrier-json.app.state' | 'keyrier-json.user.settings'\n\nexport const persistAppState = (appstate: AppState) => {\n  persist('keyrier-json.app.state', appstate)\n}\n\nexport const persistUserSettings = (userSettings: UserSettingsState) => {\n  persist('keyrier-json.user.settings', userSettings)\n}\n\nconst persist = (key: StorageKey, value: any) => {\n  const storage = getStorage()\n  if (storage) {\n    const toBeSaved = JSON.stringify(value)\n    try {\n      storage.setItem(key, toBeSaved)\n    } catch (error) {\n      toast.warn(`Error while saving ${key} to storage. size: ${prettyPrintBytes(toBeSaved.length)}`)\n    }\n  }\n}\n\nconst loadFromStorage = (key: StorageKey) => {\n  const storage = getStorage()\n  if (storage) {\n    return storage.getItem(key)\n  }\n  return null\n}\n\nconst getDefault = (key: StorageKey) => {\n  switch (key) {\n    case 'keyrier-json.app.state':\n      return getInitialAppState()\n    case 'keyrier-json.user.settings':\n      return getInitialUserSettingsState()\n    default:\n      throw new Error(`no defaul value for ${key}`)\n  }\n}\n\nexport function load<T extends UserSettingsState | AppState>(key: StorageKey) {\n  let state = getDefault(key) as T\n  try {\n    const savedStateString = loadFromStorage(key)\n    if (savedStateString) {\n      state = JSON.parse(savedStateString)\n      state = lodash.merge({}, state)\n    }\n  } catch (error) {\n    logError(error)\n  }\n\n  return state\n}\n\nconst getStorage = () => {\n  if (window.localStorage) {\n    return window.localStorage\n  }\n  return window.sessionStorage\n}\n","import { createStore, compose } from 'redux'\nimport rootReducers from '../Reducers/reducers'\nimport { AppState, UserSettingsState } from '../State/State'\nimport { load, persistAppState, persistUserSettings } from './persistence'\n\nexport const configureStore = () => {\n  const appState = load<AppState>('keyrier-json.app.state')\n  const userSettingsState = load<UserSettingsState>('keyrier-json.user.settings')\n\n  const composeEnhancers =\n    typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        })\n      : compose\n\n  const store = createStore(rootReducers, { app: appState, userSettings: userSettingsState }, composeEnhancers())\n\n  store.subscribe(() => {\n    persistAppState(store.getState().app)\n    persistUserSettings(store.getState().userSettings)\n  })\n\n  return store\n}\n","import { Provider } from 'react-redux'\nimport './index.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport registerServiceWorker from './registerServiceWorker'\nimport { configureStore } from './Store/store'\nimport * as React from 'react'\nimport { getTheme } from './Store/selectors'\nimport { importThemeStyleCustom } from './Themes/themes'\nimport * as Loadable from 'react-loadable'\nimport { load } from './Store/persistence'\nimport { UserSettingsState } from './State/State'\n;(async () => {\n  const store = configureStore()\n\n  const promises = await Promise.all([\n    import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n    import(/* webpackChunkName: \"App\" */ './Components/App'),\n    importThemeStyleCustom(getTheme(store.getState())),\n  ])\n\n  const userSettings = load<UserSettingsState>('keyrier-json.user.settings')\n\n  const ReactDOM = promises[0]\n  const App = promises[1].default\n\n  if (userSettings.concurrentModeEnable) {\n    const Concurrent = (React as any).unstable_ConcurrentMode\n    const root = (ReactDOM as any).unstable_createRoot(document.getElementById('root'))\n    root.render(\n      <Concurrent>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </Concurrent>\n    )\n  } else {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    )\n  }\n\n  Loadable.preloadAll()\n\n  registerServiceWorker()\n})()\n"],"sourceRoot":""}