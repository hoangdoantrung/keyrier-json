{"version":3,"sources":["Components/Editor/SourceEditor/RequestHeader.tsx","Components/Editor/SourceEditor/RequestSource.tsx","Components/Editor/SourceEditor/LateralMenu.tsx","Components/Editor/SourceEditor/SourceEditor.tsx","Components/Deferred/Loading.tsx","Components/Deferred/Loading.module.scss","Components/Deferred/DeferredAceEditor.tsx"],"names":["RenderHeaderInput","memo","withErrorBoundary","_ref","header","onRemove","onChange","id","react","className","key","value","concat","type","name","placeholder","_onChange","_x","apply","this","arguments","toString","e","Object","objectSpread","target","_onChange2","_x2","DeferredReactstrap","outline","color","onClick","connect","setSource","updateSource","onRequestSucceed","_useChangeEventState","useChangeEventState","_useChangeEventState2","slicedToArray","method","setMethod","_useChangeEventState3","_useChangeEventState4","url","setUrl","_useChangeEventState5","_useChangeEventState6","body","setBody","_useState","useState","_useState2","headers","setHeaders","_useState3","_useState4","error","setError","_useToggleState","useToggleState","_useToggleState2","hasBody","setHasBody","submit","buildSubmit","htmlFor","defaultValue","inline","hidden","toConsumableArray","length","map","index","h","filter","block","message","stack","displayError","asyncToGenerator","regenerator_default","a","mark","_callee","requestInit","request","json","result","wrap","_context","prev","next","Request","logInfo","mode","Array","from","entries","cache","credentials","redirect","referrer","fetch","sent","t0","logError","abrupt","customToString","stop","state","autoFormat","getSourceAutoFormat","onFileContentReady","onReset","resetEditor","onClear","clearEditor","changeAutoFormat","updateAutoFormatSource","dropdownIsOpen","toggleDropdown","_useToggleState3","_useToggleState4","modalIsOpen","toggleModal","handleFileChange","useCallback","files","fileReader","FileReader","onload","readAsText","handleAutoFormatChange","vertical","isOpen","toggle","caret","style","display","check","checked","role","size","RequestSource","sourceText","getSourceText","SourceEditor_LateralMenu","DeferredAceEditor","theme","fontSize","cursorStart","showPrintMargin","showGutter","highlightActiveLine","debounceChangePeriod","minLines","maxLines","enableBasicAutocompletion","enableLiveAutocompletion","wrapEnabled","setOptions","showLineNumbers","editorProps","$blockScrolling","Infinity","annotations","width","__webpack_require__","d","__webpack_exports__","Loading","react__WEBPACK_IMPORTED_MODULE_0__","_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","n","componentName","props","Styles","loader","module","exports","spin","loadAceEditor","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_magoo_magoo_keyrier_json_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","aceEditor","then","t","bind","Promise","all","AceEditor","Loadable","loading"],"mappings":"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","file":"static/js/SourceEditor.339eb698.chunk.js","sourcesContent":["import * as React from 'react'\nimport { Button } from '../../Deferred/DeferredReactstrap'\nimport { memo } from 'react'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\n\ninterface Header {\n  key: string\n  value: string\n}\n\ninterface Props {\n  header: Header\n  id: number\n  onChange: (h: Header) => void\n  onRemove: () => void\n}\n\nexport const RenderHeaderInput: React.FC<Props> = memo(\n  withErrorBoundary(({ header, onRemove, onChange, id }) => {\n    return (\n      <div className=\"row align-items-center\" key={id}>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={header.key}\n            id={`headerName${id}`}\n            type=\"text\"\n            name={`headerName${id}`}\n            placeholder=\"enter an name\"\n            onChange={e => onChange({ ...header, key: e.target.value })}\n          />\n        </div>\n        <div className=\"col-sm-5\">\n          <input\n            className=\"form-control-lg form-control\"\n            value={header.value}\n            type=\"text\"\n            name={`headerValue${id}`}\n            id={`headerValue${id}`}\n            placeholder=\"enter an value\"\n            onChange={e => onChange({ ...header, value: e.target.value })}\n          />\n        </div>\n        <div className=\"col-sm-2\">\n          <Button outline={true} color=\"danger\" onClick={onRemove}>\n            remove\n          </Button>\n        </div>\n      </div>\n    )\n  })\n)\n","import * as React from 'react'\nimport { logError, logInfo } from '../../../helpers/logger'\nimport { connect } from 'react-redux'\nimport { updateSource } from '../../../Actions/actions'\nimport { customToString } from '../../../helpers/string'\nimport { RenderHeaderInput } from './RequestHeader'\nimport { useState, memo } from 'react'\nimport { Alert, FormGroup, Form, Button } from '../../Deferred/DeferredReactstrap'\nimport { useToggleState, useChangeEventState } from '../../../Hooks/hooks'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\n\ninterface Props {\n  onRequestSucceed: () => void\n  setSource: (src: string) => void\n}\n\nconst displayError = (error: TypeError | null) => {\n  if (!error) {\n    return <></>\n  }\n  return (\n    <Alert color=\"danger\">\n      Error: {error.message ? error.message : ''}\n      {error.stack ? error.stack : ''}\n    </Alert>\n  )\n}\n\nconst HttpRequestSource: React.FC<Props> = ({ onRequestSucceed, setSource }) => {\n  const [method, setMethod] = useChangeEventState('GET')\n  const [url, setUrl] = useChangeEventState('https://rickandmortyapi.com/api/character/')\n  const [body, setBody] = useChangeEventState('')\n  const [headers, setHeaders] = useState([{ key: 'Accept', value: 'application/json' }])\n  const [error, setError] = useState(null as TypeError | null)\n  const [hasBody, setHasBody] = useToggleState()\n\n  const submit = buildSubmit(setError, method, headers, hasBody, body, url, setSource, onRequestSucceed)\n\n  return (\n    <>\n      <FormGroup>\n        <label htmlFor=\"requestMethod\">Method</label>\n        <select\n          className=\"form-control-lg form-control\"\n          defaultValue={method}\n          name=\"requestMethod\"\n          id=\"requestMethod\"\n          onChange={setMethod}\n        >\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>OPTIONS</option>\n        </select>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"requestUrl\">Request URL</label>\n        <input\n          defaultValue={url}\n          className=\"form-control-lg form-control\"\n          type=\"url\"\n          name=\"requestUrl\"\n          id=\"requestUrl\"\n          placeholder=\"enter an URL\"\n          onChange={setUrl}\n        />\n      </FormGroup>\n      <div className=\"position-relative form-check\">\n        <label className=\"form-check-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" onChange={setHasBody} /> Add body\n        </label>\n      </div>\n      <Form inline={true} hidden={!hasBody}>\n        <FormGroup>\n          <label>Body</label>\n          <input className=\"form-control-lg form-control\" type=\"textarea\" value={body} onChange={setBody} />{' '}\n        </FormGroup>\n      </Form>\n      <label htmlFor=\"headers\">Request headers</label>{' '}\n      <Button\n        outline={true}\n        color=\"primary\"\n        onClick={() => setHeaders([...headers, { key: `name-${headers.length + 1}`, value: 'value' }])}\n      >\n        Add header\n      </Button>\n      <br />\n      <br />\n      {headers.map((header, index) => (\n        <RenderHeaderInput\n          header={header}\n          key={index}\n          id={index}\n          onChange={h => {\n            headers[index] = { ...h }\n            setHeaders([...headers])\n          }}\n          onRemove={() => setHeaders(headers.filter(h => h !== header))}\n        />\n      ))}\n      <br />\n      <Button block={true} color=\"primary\" onClick={submit}>\n        Submit\n      </Button>\n      {displayError(error)}\n    </>\n  )\n}\n\nexport default connect(\n  null,\n  { setSource: updateSource }\n)(withErrorBoundary(memo(HttpRequestSource)))\n\nconst buildSubmit = (\n  setError: (e: TypeError | null) => void,\n  method: string,\n  headers: Array<{ key: string; value: string }>,\n  hasBody: boolean,\n  body: string,\n  url: string,\n  setSource: (src: string) => void,\n  onRequestSucceed: () => void\n) => {\n  return async () => {\n    setError(null)\n    const requestInit: RequestInit = {\n      method,\n      headers: headers.map(h => [h.key, h.value]),\n      body: hasBody ? body : null,\n    }\n    const request = new Request(url, requestInit)\n    logInfo('request', {\n      url: request.url,\n      method: request.method,\n      mode: request.mode,\n      body: request.body,\n      headers: Array.from((request.headers as any).entries()),\n      cache: request.cache,\n      credentials: request.credentials,\n      redirect: request.redirect,\n      referrer: request.referrer,\n    })\n    let json: string\n    try {\n      const result = await fetch(request)\n      json = await result.json()\n    } catch (error) {\n      logError('HttpRequestSource.submit', error)\n      setError(error)\n      return\n    }\n    setSource(customToString(json))\n    onRequestSucceed()\n  }\n}\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  UpdateSource,\n  updateSource,\n  ResetEditor,\n  resetEditor,\n  ClearEditor,\n  clearEditor,\n  updateAutoFormatSource,\n  UpdateAutoFormatSource,\n} from '../../../Actions/actions'\nimport HttpRequestSource from './RequestSource'\nimport './ImportMenu.css'\nimport { logInfo } from '../../../helpers/logger'\nimport { useToggleState } from '../../../Hooks/hooks'\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  ButtonGroup,\n  FormGroup,\n  Label,\n  Input,\n} from '../../Deferred/DeferredReactstrap'\nimport { memo, useCallback } from 'react'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\nimport { getSourceAutoFormat } from '../../../Store/selectors'\nimport { RootState } from '../../../State/State'\n\ninterface Props {\n  onFileContentReady: (fileContent: string) => UpdateSource\n  changeAutoFormat: (active: boolean) => UpdateAutoFormatSource\n  onReset: () => ResetEditor\n  onClear: () => ClearEditor\n  autoFormat: boolean\n}\n\nconst LateralMenu: React.FC<Props> = ({ onReset, onFileContentReady, onClear, autoFormat, changeAutoFormat }) => {\n  const [dropdownIsOpen, toggleDropdown] = useToggleState()\n  const [modalIsOpen, toggleModal] = useToggleState()\n\n  const handleFileChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      logInfo('onFileChange')\n      toggleDropdown()\n      if (e.target.files && e.target.files.length > 0) {\n        const fileReader = new FileReader()\n        logInfo('e.target.files', e.target.files[0].name)\n        fileReader.onload = () => {\n          if (fileReader.result) {\n            onFileContentReady(fileReader.result.toString())\n          }\n        }\n        fileReader.readAsText(e.target.files[0])\n      }\n    },\n    [toggleDropdown, onFileContentReady]\n  )\n\n  const handleAutoFormatChange = useCallback(() => changeAutoFormat(!autoFormat), [changeAutoFormat, autoFormat])\n\n  return (\n    <>\n      <ButtonGroup vertical={true}>\n        <ButtonDropdown isOpen={dropdownIsOpen} toggle={toggleDropdown}>\n          <DropdownToggle caret={true} color=\"primary\">\n            Import\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem toggle={false}>\n              <label>\n                Browse JSON file...\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"sourceFile\"\n                  style={{ display: 'none' }}\n                  onChange={handleFileChange}\n                />\n              </label>\n            </DropdownItem>\n            <DropdownItem onClick={toggleModal}>\n              <label>HTTP request</label>\n            </DropdownItem>\n            <DropdownItem onClick={onReset}>\n              <label>Reset</label>\n            </DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        <Button color=\"primary\" onClick={onClear}>\n          Clear\n        </Button>\n      </ButtonGroup>\n      <FormGroup className=\"pt-4\" check={true}>\n        <Label check={true}>\n          <Input checked={autoFormat} type=\"checkbox\" onChange={handleAutoFormatChange} />\n          Auto format\n        </Label>\n      </FormGroup>\n      <Modal id=\"requestModal\" role=\"dialog\" size=\"lg\" isOpen={modalIsOpen} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Import JSON from an HTTP request</ModalHeader>\n        <ModalBody>\n          <HttpRequestSource onRequestSucceed={toggleModal} />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: RootState) => ({ autoFormat: getSourceAutoFormat(state) })\n\nexport default connect(\n  mapStateToProps,\n  {\n    onFileContentReady: updateSource,\n    onReset: resetEditor,\n    onClear: clearEditor,\n    changeAutoFormat: updateAutoFormatSource,\n  }\n)(memo(withErrorBoundary(LateralMenu)))\n","import * as React from 'react'\nimport { connect } from 'react-redux'\nimport { UpdateSource, updateSource } from '../../../Actions/actions'\nimport { RootState } from '../../../State/State'\nimport ImportMenu from './LateralMenu'\nimport { AceEditor } from '../../Deferred/DeferredAceEditor'\nimport { getSourceText } from '../../../Store/selectors'\nimport { memo } from 'react'\nimport { withErrorBoundary } from '../../Common/ErrorBoundary'\n\ninterface Props {\n  onChange: (val: string) => UpdateSource\n  sourceText: string\n}\n\nconst SourceEditor: React.FC<Props> = ({ onChange, sourceText }) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-2\">\n        <h3>1. Paste your JSON:</h3>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <ImportMenu />\n      </div>\n      <div className=\"col-sm-10\">\n        <AceEditor\n          mode=\"json\"\n          theme=\"monokai\"\n          name=\"sourceAceEditor\"\n          onChange={onChange}\n          fontSize={13}\n          cursorStart={1}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={sourceText}\n          debounceChangePeriod={1000}\n          minLines={35}\n          maxLines={35}\n          enableBasicAutocompletion={false}\n          enableLiveAutocompletion={false}\n          wrapEnabled={false}\n          setOptions={{\n            showLineNumbers: true,\n          }}\n          editorProps={{ $blockScrolling: Infinity }}\n          annotations={[]}\n          width={'100%'}\n        />\n      </div>\n    </div>\n  </>\n)\n\nconst mapStateToProps = (state: RootState) => ({\n  sourceText: getSourceText(state),\n})\n\nexport default connect(\n  mapStateToProps,\n  { onChange: updateSource }\n)(withErrorBoundary(memo(SourceEditor)))\n","import * as React from 'react'\nimport Styles from './Loading.module.scss'\n\nexport const Loading = (componentName: string) => (props: LoadableExport.LoadingComponentProps) => {\n  if (props.error) {\n    return <div>{props.error}</div>\n  }\n\n  return <div className={Styles.loader}>{process.env.NODE_ENV === 'production' ? '' : componentName}</div>\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__zsQ18\",\"spin\":\"Loading_spin__3n9Ub\"};","import { Loading } from './Loading'\nimport * as Loadable from 'react-loadable'\n\nconst loadAceEditor = async () => {\n  const aceEditor = await import(/* webpackChunkName: \"react-ace\" */ 'react-ace')\n  await Promise.all([\n    import(/* webpackChunkName: \"brace/theme/monokai\" */ 'brace/theme/monokai'),\n    import(/* webpackChunkName: \"brace/theme/github\" */ 'brace/theme/github'),\n    import(/* webpackChunkName: \"brace/mode/json\" */ 'brace/mode/json'),\n    import(/* webpackChunkName: \"brace/mode/javascript\" */ 'brace/mode/javascript'),\n    import(/* webpackChunkName: \"brace/mode/mysql\" */ 'brace/mode/mysql'),\n    import(/* webpackChunkName: \"brace/ext/language_tools\" */ 'brace/ext/language_tools'),\n    import(/* webpackChunkName: \"brace/ext/searchbox\" */ 'brace/ext/searchbox'),\n    import(/* webpackChunkName: \"brace/snippets/javascript\" */ 'brace/snippets/javascript'),\n    import(/* webpackChunkName: \"brace/snippets/json\" */ 'brace/snippets/json'),\n  ])\n  return aceEditor\n}\n\nexport const AceEditor = Loadable({\n  loading: Loading('AceEditor'),\n  loader: loadAceEditor,\n})\n"],"sourceRoot":""}