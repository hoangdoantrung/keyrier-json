{"version":3,"sources":["registerServiceWorker.ts","helpers/code.ts","helpers/logger.ts","helpers/json.ts","State/State.ts","Reducers/reducers.ts","Store/store.ts","Components/Deferred/Loading.tsx","Components/Deferred/DeferredReactstrap.tsx","Actions/actions.ts","helpers/string.ts","Components/Deferred/DeferredReactSelect.tsx","Components/Editor/Output/TableAdvancedOptions.tsx","Components/Deferred/DeferredReactTable.tsx","Store/selectors.ts","Components/Editor/Output/OutputTableView.tsx","Components/Editor/Output/OutputTable.tsx","Components/Deferred/DeferredAceEditor.tsx","Components/Editor/Output/Output.tsx","Components/Editor/QueryEditor/QueryEditor.tsx","Components/Editor/SourceEditor/RequestHeader.tsx","Components/Editor/SourceEditor/RequestSource.tsx","Components/Editor/SourceEditor/ImportMenu.tsx","Components/Editor/SourceEditor/SourceEditor.tsx","Components/Editor/Editor.tsx","Components/Header.tsx","Components/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","URL","process","toString","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","lodash","__webpack_require__","e","t","bind","module","default","logError","payload","arguments","length","undefined","logInfo","warnMessage","warn","jsonBeautify","str","trim","parsed","jsonParseSafe","JSON","stringify","safeStr","replace","parse","getInitialState","initialStateJson","rootReducer","rootState","action","newState","Object","objectSpread","query","source","newOutputState","output","text","table","type","sourceText","computeOutput","previousState","sourceString","queryString","_","code","evaluatedQuery","eval","apply","codeEvaluation","array","isArray","isModalOpen","displayedColumns","columns","groupBy","Error","errorMessage","message","Array","keyMap","filter","d","is","map","keys","forEach","keysToAdd","key","sort","ax","b","toLowerCase","localeCompare","groupByList","gb","rootReducers","combineReducers","configureStore","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","lodashModule","preloadState","savedStateString","merge","composeEnhancers","enhancer","store","wrap","_context","prev","next","sent","localStorage","getItem","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","subscribe","getState","setItem","abrupt","stop","this","Loading","componentName","props","react","CustomLoading","Loadable","require","Button","loading","loader","_loader","Alert","_loader2","_callee2","_context2","Promise","all","TabContent","_loader3","_callee3","_context3","TabPane","_loader4","_callee4","_context4","Modal","_loader5","_callee5","_context5","ModalHeader","_loader6","_callee6","_context6","ModalBody","_loader7","_callee7","_context7","ModalFooter","_loader8","_callee8","_context8","ButtonDropdown","_loader9","_callee9","_context9","DropdownItem","_loader10","_callee10","_context10","DropdownMenu","_loader11","_callee11","_context11","DropdownToggle","_loader12","_callee12","_context12","Collapse","_loader13","_callee13","_context13","Form","_loader14","_callee14","_context14","FormGroup","_loader15","_callee15","_context15","updateSource","customToString","obj","join","LoadableReactSelect","handleOnclickOnExportToExcel","data","xlsx","workBook","workSheet","utils","book_new","json_to_sheet","book_append_sheet","writeFile","_x","connect","onColumnsChange","updateTableGroupBy","_ref2","_React$useState","React","_React$useState2","slicedToArray","optionsCollapsed","setOptionsCollapsed","columnOptions","k","value","label","className","color","block","onClick","isOpen","name","id","onChange","target","options","isMulti","cols","mapped","c","LoadableReactTable","getOutputTableData","tableColumnConfig","Aggregated","row","Cell","cellProps","Header","accessor","Output_TableAdvancedOptions","noDataText","defaultPageSize","filterable","pivotBy","defaultFilterMethod","part","toLocaleLowerCase","includes","getisOutputTableModalOpen","toggleModal","toggle","Output_OutputTableView","outline","loadAceEditor","aceEditor","AceEditor","getOutputErrorMessage","getOutputIsArray","getOutputText","activeTab","setActiveTab","display","classNames","active","nav-link","hidden","tabId","mode","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","minLines","maxLines","wrapEnabled","readOnly","editorProps","$blockScrolling","Infinity","setOptions","showLineNumbers","tabSize","width","Editor_Output_OutputTable","queryText","enableSnippets","dragEnabled","enableBasicAutocompletion","enableLiveAutocompletion","RenderHeaderInput","header","onRemove","placeholder","_onChange","_onChange2","_x2","onRequestSucceed","method","setMethod","_React$useState3","_React$useState4","url","setUrl","_React$useState5","_React$useState6","setHeaders","_React$useState7","_React$useState8","setError","_React$useState9","_React$useState10","body","setBody","_React$useState11","_React$useState12","hasBody","setHasBody","submit","requestInit","request","json","result","h","Request","from","entries","cache","credentials","redirect","referrer","t0","htmlFor","defaultValue","inline","toConsumableArray","index","RequestHeader_RenderHeaderInput","stack","displayError","ImportMenu","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleImportDropdown","setState","toggleDropdownIsOpen","modal","onFileChange","files","fileReader","FileReader","onload","onFileContentReady","readAsText","inherits","createClass","caret","style","role","size","RequestSource","Component","Editor_SourceEditor_ImportMenu","cursorStart","onReset","Editor_SourceEditor_SourceEditor","Editor_QueryEditor_QueryEditor","Editor_Output_Output","href","version","App","Header_Header","Components_Editor_Editor","promises","render","es","src_Components_App","document","getElementById","registerServiceWorker","preloadAll","start"],"mappings":"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","file":"static/js/main.905019de.chunk.js","sourcesContent":["// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let lodash: _.LoDashStatic | null = null;\nimport(/* webpackChunkName: \"lodash\" */ 'lodash').then(module => {\n  lodash = module.default;\n});\n\nexport const codeEvaluation = (\n  sourceString: string,\n  queryString: string\n): string | null | Error => {\n  if (!sourceString || sourceString.trim() === '') {\n    return null;\n  }\n\n  if (!queryString || queryString.trim() === '') {\n    return null;\n  }\n\n  try {\n    (window as any)._ = lodash;\n    const code = `\n      \n        const data = eval(${sourceString})\n        JSON.stringify(${queryString})\n      `;\n    const evaluatedQuery = eval.apply(null, [code]); // DANGEROUS\n    const type = typeof evaluatedQuery;\n    if (type !== 'string') {\n      return null;\n    }\n    return evaluatedQuery as string;\n  } catch (error) {\n    return error;\n  } finally {\n    (window as any)._ = undefined;\n  }\n};\n","// tslint:disable:no-console\n\nexport const logError = (error: string | Error, payload: any = undefined) => {\n  console.error('Keyrier error', error);\n  console.error(payload);\n};\n\nexport const logWarning = (warnMessage: string, payload: any = undefined) => {\n  console.warn(warnMessage, payload);\n};\n\nexport const logInfo = (warnMessage: string, payload: any = undefined) => {\n  console.warn(warnMessage, payload);\n};\n","import { logError } from './logger';\n\nexport const jsonBeautify = (str: string) => {\n  if (!str || str.trim() === '') {\n    return '';\n  }\n\n  const parsed = jsonParseSafe(str);\n  if (typeof parsed === 'string') {\n    return parsed;\n  }\n\n  try {\n    return JSON.stringify(parsed, null, 2);\n  } catch (error) {\n    logError(error, str);\n  }\n  return str;\n};\n\nexport const jsonParseSafe = (str: string) => {\n  if (!str || str.trim() === '') {\n    return '';\n  }\n\n  const safeStr = str\n    .replace(/\\\\n/g, '\\\\n')\n    .replace(/\\\\'/g, \"\\\\'\")\n    .replace(/\\\\\"/g, '\\\\\"')\n    .replace(/\\\\&/g, '\\\\&')\n    .replace(/\\\\r/g, '\\\\r')\n    .replace(/\\\\t/g, '\\\\t')\n    .replace(/\\\\b/g, '\\\\b')\n    .replace(/\\\\f/g, '\\\\f')\n    .replace(/[\\u0000-\\u0019]+/g, '');\n\n  try {\n    return JSON.parse(safeStr);\n  } catch (error) {\n    return str;\n  }\n};\n","import initialStateJson from './default-state.json';\n\nexport interface QueryState {\n  readonly text: string;\n}\n\nexport interface SourceState {\n  readonly text: string;\n}\n\nexport interface OupoutState {\n  readonly text: string;\n  readonly errorMessage?: string;\n  readonly table: Readonly<OupoutTableState>;\n}\n\nexport type itemType =\n  | null\n  | undefined\n  | string\n  | boolean\n  | number\n  | never\n  | any;\n\nexport interface OupoutTableState {\n  readonly array: itemType[];\n  readonly isArray: boolean;\n  readonly isModalOpen: boolean;\n  readonly displayedColumns: string[];\n  readonly columns: string[];\n  readonly groupBy: string[];\n}\n\nexport interface RootState {\n  readonly source: Readonly<SourceState>;\n  readonly query: Readonly<QueryState>;\n  readonly output: Readonly<OupoutState>;\n  readonly error?: Error;\n}\n\nexport interface AppState {\n  readonly rootReducer: Readonly<RootState>;\n}\n\nexport const getInitialState = () => initialStateJson;\n","import { combineReducers, Reducer } from 'redux';\nimport { Action, UpdateSource } from '../Actions/actions';\nimport { codeEvaluation } from '../helpers/code';\nimport { jsonParseSafe } from '../helpers/json';\nimport {\n  OupoutState,\n  QueryState,\n  RootState,\n  SourceState,\n  OupoutTableState,\n  getInitialState,\n  itemType,\n} from '../State/State';\nimport { logError, logWarning } from '../helpers/logger';\n\nexport const rootReducer = (\n  rootState: Readonly<RootState> = getInitialState(),\n  action: Action\n): RootState => {\n  const newState = {\n    ...rootState,\n    query: query(rootState.query, action),\n    source: source(rootState.source, action),\n  };\n\n  const newOutputState = output(\n    newState.output,\n    newState.source.text,\n    newState.query.text,\n    action\n  );\n  return {\n    ...newState,\n    output: {\n      ...newOutputState,\n      table: table(newOutputState.table, action),\n    },\n  };\n};\n\nexport const crashReporter = (\n  rootReducerFn: Reducer<RootState>,\n  state: RootState,\n  action: Action\n): RootState => {\n  try {\n    return rootReducerFn(state, action);\n  } catch (error) {\n    logError(error, state);\n    logWarning('You may need to clear local storage !!!');\n\n    return { ...state, error };\n  }\n};\n\nexport const sourceText = (\n  state: Readonly<SourceState>,\n  action: UpdateSource\n) => ({\n  ...state,\n  text: action.source,\n});\n\nexport const source = (state: Readonly<SourceState>, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_SOURCE_TEXT':\n      return sourceText(state, action);\n    default:\n      return state;\n  }\n};\n\nexport const query = (state: Readonly<QueryState>, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_QUERY':\n      return {\n        ...state,\n        text: action.query,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const outputTable = (\n  state: Readonly<OupoutTableState>,\n  action: Action\n) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      return { ...state, columns: action.columns };\n    default:\n      return state;\n  }\n};\ninterface Map<T> {\n  [key: string]: T;\n}\nexport const computeOutput = (\n  previousState: Readonly<OupoutState>,\n  sourceString: string,\n  queryString: string,\n  action: Action\n): OupoutState => {\n  const text = codeEvaluation(sourceString, queryString);\n  if (text === null) {\n    return {\n      text: '',\n      table: {\n        array: [],\n        isArray: false,\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    };\n  }\n  if (text instanceof Error) {\n    return {\n      text: '',\n      errorMessage: text.message,\n      table: {\n        isArray: false,\n        array: [],\n        isModalOpen: false,\n        displayedColumns: [],\n        columns: [],\n        groupBy: [],\n      },\n    };\n  }\n\n  let displayedColumns = new Array<string>();\n  const array: itemType[] = jsonParseSafe(text);\n  const isArray = Array.isArray(array);\n  if (isArray) {\n    const keyMap: Map<string> = {};\n    array\n      .filter(d => d)\n      .filter(d => typeof d === 'object')\n      .filter(d => !Object.is(d, {}))\n      .filter(d => !Array.isArray(d))\n      .map(d => (d ? Object.keys(d) : []))\n      .forEach(keysToAdd => {\n        keysToAdd.forEach(key => (keyMap[key] = key));\n      });\n    displayedColumns = Object.keys(keyMap)\n      .filter(key => key)\n      .filter(key => typeof key === 'string')\n      .filter(key => key.trim() !== '')\n      .sort((ax, b) => ax.toLowerCase().localeCompare(b.toLowerCase()));\n  }\n  const isModalOpen =\n    action.type === 'TOGGLE_OUTPUT_TABLE_MODAL'\n      ? !previousState.table.isModalOpen\n      : previousState.table.isModalOpen;\n  return {\n    text,\n    table: {\n      array: isArray ? array : [],\n      isArray,\n      isModalOpen,\n      displayedColumns,\n      columns: displayedColumns,\n      groupBy: [],\n    },\n  };\n};\n\nexport const output = (\n  previousState: OupoutState,\n  sourceString: string,\n  queryString: string,\n  action: Action\n): OupoutState => {\n  switch (action.type) {\n    case '@@INIT':\n    case 'EVALUATE_CODE':\n    case 'RESET_EDITOR':\n    case 'UPDATE_QUERY':\n    case 'UPDATE_SOURCE_TEXT':\n      return computeOutput(previousState, sourceString, queryString, action);\n    case 'TOGGLE_OUTPUT_TABLE_MODAL':\n      return {\n        ...previousState,\n        table: {\n          ...previousState.table,\n          isModalOpen: !previousState.table.isModalOpen,\n        },\n      };\n    default:\n      return previousState;\n  }\n};\n\nexport const table = (state: OupoutTableState, action: Action) => {\n  switch (action.type) {\n    case 'UPDATE_TABLE_COLUMNS':\n      let groupByList = state.groupBy;\n      groupByList.forEach(groupBy => {\n        if (action.columns.indexOf(groupBy) === -1) {\n          groupByList = groupByList.filter(\n            gb => action.columns.indexOf(gb) !== -1\n          );\n        }\n      });\n      return {\n        ...state,\n        displayedColumns: action.columns,\n        groupBy: groupByList,\n      };\n    case 'UPDATE_TABLE_GROUP_BY':\n      return {\n        ...state,\n        groupBy: action.groupBy\n          .filter(gb => state.displayedColumns.indexOf(gb) !== -1)\n          .filter(gb => gb !== 'Group by...'),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducerReset = (\n  state: Readonly<RootState>,\n  action: Action\n) => {\n  if (action.type === 'RESET_EDITOR') {\n    return rootReducer({ ...getInitialState() }, action);\n  }\n  return rootReducer(state, action);\n};\nconst rootReducers = combineReducers({\n  rootReducer: rootReducerReset as any,\n});\nexport default rootReducers;\n","import { createStore, compose } from 'redux';\nimport rootReducers from '../Reducers/reducers';\nimport { RootState, getInitialState } from '../State/State';\nimport { logError } from '../helpers/logger';\n\nconst persistStore = (rootState: RootState | {}) => {\n  if (window.localStorage) {\n    localStorage.setItem('keyrier-json.app.state', JSON.stringify(rootState));\n  }\n};\n\nconst loadStore = () => {\n  if (window.localStorage) {\n    return localStorage.getItem('keyrier-json.app.state');\n  }\n  return null;\n};\n\nexport const configureStore = async () => {\n  const lodashModule = await import(/* webpackChunkName: \"lodash\" */ 'lodash');\n  let preloadState = getInitialState();\n\n  try {\n    const savedStateString = loadStore();\n    if (savedStateString) {\n      preloadState = JSON.parse(savedStateString);\n      const merge = lodashModule.merge;\n      preloadState = merge({}, getInitialState(), preloadState);\n    }\n  } catch (error) {\n    logError(error);\n  }\n\n  const composeEnhancers =\n    typeof window === 'object' &&\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        })\n      : compose;\n\n  const enhancer = composeEnhancers();\n\n  const store = createStore(\n    rootReducers,\n    { rootReducer: preloadState },\n    enhancer\n  );\n\n  store.subscribe(() => {\n    persistStore(store.getState().rootReducer);\n  });\n\n  return store;\n};\n","import * as React from 'react';\n\nconst CustomLoading = (\n  props: LoadableExport.LoadingComponentProps,\n  componentName: string\n) => {\n  if (props.error) {\n    return <div>{props.error}</div>;\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    return <></>;\n  }\n\n  return <div>{componentName} loading...</div>;\n};\n\nexport const Loading = (componentName: string) => (\n  props: LoadableExport.LoadingComponentProps\n) => CustomLoading(props, componentName);\n","import { Loading } from './Loading';\n\n// tslint:disable-next-line:no-var-requires\nconst Loadable: LoadableExport.Loadable = require('react-loadable');\n\nexport const Button = Loadable({\n  loading: Loading('Button'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/Button\" */ 'reactstrap/lib/Button'),\n});\n\nexport const Alert = Loadable({\n  loading: Loading('Alert'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/Alert\" */ 'reactstrap/lib/Alert'),\n});\n\nexport const TabContent = Loadable({\n  loading: Loading('TabContent'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/TabContent\" */ 'reactstrap/lib/TabContent'),\n});\n\nexport const TabPane = Loadable({\n  loading: Loading('TabPane'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/TabPane\" */ 'reactstrap/lib/TabPane'),\n});\n\nexport const Modal = Loadable({\n  loading: Loading('Modal'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/Modal\" */ 'reactstrap/lib/Modal'),\n});\n\nexport const ModalHeader = Loadable({\n  loading: Loading('ModalHeader'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/ModalHeader\" */ 'reactstrap/lib/ModalHeader'),\n});\n\nexport const ModalBody = Loadable({\n  loading: Loading('ModalBody'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/ModalBody\" */ 'reactstrap/lib/ModalBody'),\n});\n\nexport const ModalFooter = Loadable({\n  loading: Loading('ModalFooter'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/ModalFooter\" */ 'reactstrap/lib/ModalFooter'),\n});\n\nexport const ButtonDropdown = Loadable({\n  loading: Loading('ButtonDropdown'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/ButtonDropdown\" */ 'reactstrap/lib/ButtonDropdown'),\n});\n\nexport const DropdownItem = Loadable({\n  loading: Loading('DropdownItem'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/DropdownItem\" */ 'reactstrap/lib/DropdownItem'),\n});\n\nexport const DropdownMenu = Loadable({\n  loading: Loading('DropdownMenu'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/DropdownMenu\" */ 'reactstrap/lib/DropdownMenu'),\n});\n\nexport const DropdownToggle = Loadable({\n  loading: Loading('DropdownToggle'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/DropdownToggle\" */ 'reactstrap/lib/DropdownToggle'),\n});\n\nexport const Collapse = Loadable({\n  loading: Loading('Collapse'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/Collapse\" */ 'reactstrap/lib/Collapse'),\n});\n\nexport const Form = Loadable({\n  loading: Loading('Form'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/Form\" */ 'reactstrap/lib/Form'),\n});\n\nexport const FormGroup = Loadable({\n  loading: Loading('FormGroup'),\n  loader: async () =>\n    await import(/* webpackChunkName: \"reactstrap/lib/FormGroup\" */ 'reactstrap/lib/FormGroup'),\n});\n","/*\n * action creators\n */\nexport interface UpdateSource {\n  type: 'UPDATE_SOURCE_TEXT';\n  source: string;\n}\nexport const updateSource = (source: string): UpdateSource => ({\n  source,\n  type: 'UPDATE_SOURCE_TEXT',\n});\n\nexport interface UpdateQueryAction {\n  type: 'UPDATE_QUERY';\n  query: string;\n}\nexport const updateQuery = (query: string): UpdateQueryAction => ({\n  query,\n  type: 'UPDATE_QUERY',\n});\n\nexport interface ResetEditor {\n  type: 'RESET_EDITOR';\n}\nexport const resetEditor = (): ResetEditor => ({\n  type: 'RESET_EDITOR',\n});\nexport interface EvaluateCode {\n  type: 'EVALUATE_CODE';\n}\nexport const evaluateCode = (): EvaluateCode => ({\n  type: 'EVALUATE_CODE',\n});\n\nexport interface ToggleOutputTableModal {\n  type: 'TOGGLE_OUTPUT_TABLE_MODAL';\n}\nexport const toggleOutputTableModal = (): ToggleOutputTableModal => ({\n  type: 'TOGGLE_OUTPUT_TABLE_MODAL',\n});\n\nexport interface UpdateTableColumns {\n  type: 'UPDATE_TABLE_COLUMNS';\n  columns: string[];\n}\nexport const updateTableColumns = (columns: string[]): UpdateTableColumns => ({\n  columns,\n  type: 'UPDATE_TABLE_COLUMNS',\n});\nexport interface UpdateTableGroupBy {\n  type: 'UPDATE_TABLE_GROUP_BY';\n  groupBy: string[];\n}\nexport const updateTableGroupBy = (groupBy: string[]): UpdateTableGroupBy => ({\n  groupBy,\n  type: 'UPDATE_TABLE_GROUP_BY',\n});\n\nexport interface ReduxInitAction {\n  type: '@@INIT';\n}\n\nexport type Action =\n  | Readonly<EvaluateCode>\n  | Readonly<ResetEditor>\n  | Readonly<UpdateQueryAction>\n  | Readonly<ToggleOutputTableModal>\n  | Readonly<UpdateTableColumns>\n  | Readonly<ReduxInitAction>\n  | Readonly<UpdateTableGroupBy>\n  | Readonly<UpdateSource>;\n","export const customToString = (obj: {}): string => {\n  if (Array.isArray(obj)) {\n    const array: any[] = obj;\n    return array.map(e => customToString(e)).join(',');\n  }\n  if (typeof obj === 'object') {\n    return JSON.stringify(obj);\n  }\n  if (typeof obj === 'undefined') {\n    return '';\n  }\n  if (obj !== null && obj !== undefined) {\n    return obj.toString();\n  }\n\n  return '';\n};\n\nexport const containsIgnoreCase = (str: string, part: string) => {\n  if (!str || !part) {\n    return false;\n  }\n  if (str.toLocaleLowerCase().includes(part.toLocaleLowerCase())) {\n    return true;\n  }\n\n  return false;\n};\n","import { Loading } from './Loading';\n\n// tslint:disable-next-line:no-var-requires\nconst Loadable: LoadableExport.Loadable = require('react-loadable');\n\nexport const LoadableReactSelect = Loadable({\n  loading: Loading('ReactSelect'),\n  loader: () => import(/* webpackChunkName: \"react-select\" */ 'react-select'),\n});\n","import * as React from 'react';\nimport { Collapse, Button } from '../../Deferred/DeferredReactstrap';\nimport './OutputTable.css';\nimport { connect } from 'react-redux';\nimport {\n  updateTableColumns,\n  UpdateTableColumns,\n  UpdateTableGroupBy,\n  updateTableGroupBy,\n} from '../../../Actions/actions';\nimport { LoadableReactSelect } from '../../Deferred/DeferredReactSelect';\nimport { itemType, AppState } from '../../../State/State';\nimport { ValueType } from 'react-select/lib/types';\n\ninterface Props {\n  data: itemType[];\n  displayedColumns: string[];\n  groupBy: string[];\n  columns: string[];\n  onColumnsChange: (v: string[]) => UpdateTableColumns;\n  updateTableGroupBy: (v: string[]) => UpdateTableGroupBy;\n}\n\nconst handleOnclickOnExportToExcel = async (data: any) => {\n  const xlsx = await import(/* webpackChunkName: \"xlsx.js\" */ 'xlsx');\n  const workBook = xlsx.utils.book_new();\n  const workSheet = xlsx.utils.json_to_sheet(data);\n  xlsx.utils.book_append_sheet(workBook, workSheet, 'keyrier-json');\n  xlsx.writeFile(workBook, 'export.xlsx');\n};\n\nexport const TableAdvancedOptions: React.SFC<Props> = ({\n  onColumnsChange,\n  columns,\n  updateTableGroupBy,\n  data,\n  displayedColumns,\n}) => {\n  const [optionsCollapsed, setOptionsCollapsed] = React.useState(false);\n\n  const handleColumnChange = (cols: ValueType<{}> | undefined | null) => {\n    if (cols instanceof Array) {\n      const mapped = cols.map(\n        (c: { value?: string }) => (c.value ? c.value : '')\n      );\n      onColumnsChange(mapped);\n    }\n  };\n\n  if (columns.length <= 0) {\n    return <></>;\n  }\n\n  const columnOptions = columns.map(k => ({ value: k, label: k }));\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <Button\n          className={'float-left'}\n          color=\"primary\"\n          block={true}\n          onClick={() => setOptionsCollapsed(!optionsCollapsed)}\n        >\n          {optionsCollapsed ? 'Hide advanced options' : 'Advanced options'}\n        </Button>\n        <Collapse isOpen={optionsCollapsed}>\n          <select\n            className=\"form-control-lg form-control\"\n            name=\"select\"\n            id=\"groupingSelect\"\n            onChange={e => updateTableGroupBy([e.target.value])}\n          >\n            <option key={'Group by...'}>Group by...</option>\n            {displayedColumns.map(key => (\n              <option key={key}>{key}</option>\n            ))}\n          </select>\n          <Button\n            color={'success'}\n            onClick={() => handleOnclickOnExportToExcel(data)}\n          >\n            Export to Excel (.xlsx)\n          </Button>\n          <LoadableReactSelect\n            options={columnOptions}\n            value={displayedColumns.map(k => ({\n              value: k,\n              label: k,\n            }))}\n            isMulti={true}\n            onChange={handleColumnChange}\n          />\n        </Collapse>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Readonly<AppState>) => {\n  return {\n    data: state.rootReducer.output.table.array,\n    displayedColumns: state.rootReducer.output.table.displayedColumns,\n    columns: state.rootReducer.output.table.columns,\n    groupBy: state.rootReducer.output.table.groupBy,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { onColumnsChange: updateTableColumns, updateTableGroupBy }\n)(TableAdvancedOptions);\n","import 'react-table/react-table.css';\nimport { Loading } from './Loading';\n\n// tslint:disable-next-line:no-var-requires\nconst Loadable: LoadableExport.Loadable = require('react-loadable');\n\nexport const LoadableReactTable = Loadable({\n  loading: Loading('ReactTable'),\n  loader: async () =>\n    import(/* webpackChunkName: \"react-table\" */ 'react-table'),\n});\n","import { AppState } from '../State/State';\n\ntype selector<T> = (state: Readonly<AppState>) => T;\n\nexport const getOutputErrorMessage: selector<string | undefined> = (\n  state: Readonly<AppState>\n) => state.rootReducer.output.errorMessage;\n\nexport const getOutputIsArray: selector<boolean> = state =>\n  state.rootReducer.output.table.isArray;\n\nexport const getOutputText = (state: Readonly<AppState>) =>\n  state.rootReducer.output.text;\n\nexport const getOutputTableData = (state: Readonly<AppState>) =>\n  state.rootReducer.output.table.array;\n\nexport const getisOutputTableModalOpen = (state: Readonly<AppState>) =>\n  state.rootReducer.output.table.isModalOpen;\n","import * as React from 'react';\nimport { customToString, containsIgnoreCase } from '../../../helpers/string';\nimport './OutputTable.css';\nimport { connect } from 'react-redux';\nimport TableAdvancedOptions from './TableAdvancedOptions';\n\nimport { LoadableReactTable } from '../../Deferred/DeferredReactTable';\nimport { Column, Filter } from 'react-table';\nimport { itemType, AppState } from '../../../State/State';\nimport { getOutputTableData } from '../../../Store/selectors';\n\ninterface Props {\n  data: itemType[];\n  displayedColumns: string[];\n  groupBy: string[];\n}\n\nexport const OutputTableView: React.SFC<Props> = ({\n  data,\n  displayedColumns,\n  groupBy,\n}) => {\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return <div />;\n  }\n\n  const tableColumnConfig = displayedColumns.map<Column>(key => ({\n    Aggregated: (row: any) => (row ? row.value : ''),\n    Cell: (cellProps: any) =>\n      cellProps ? customToString(cellProps.value) : '',\n    Header: key,\n    accessor: key,\n    className: 'text-center',\n  }));\n\n  const defaultFilterMethod = (filter: Filter, row: itemType) =>\n    filter &&\n    row &&\n    containsIgnoreCase(customToString(row[filter.id]), filter.value);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <TableAdvancedOptions />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <LoadableReactTable\n            noDataText=\"Oh Noes!\"\n            className=\"-highlight\"\n            data={data.map(e => (e ? e : {}))}\n            defaultPageSize={20}\n            columns={tableColumnConfig}\n            filterable={true}\n            pivotBy={groupBy}\n            defaultFilterMethod={defaultFilterMethod}\n          />\n        </div>\n      </div>\n      <div className=\"mx-3 align-items-center justify-content-end d-flex\">\n        <h4>Number of elements: {data.length}</h4>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: Readonly<AppState>) => {\n  return {\n    data: getOutputTableData(state),\n    displayedColumns: state.rootReducer.output.table.displayedColumns,\n    columns: state.rootReducer.output.table.columns,\n    groupBy: state.rootReducer.output.table.groupBy,\n  };\n};\n\nexport default connect(mapStateToProps)(OutputTableView);\n","import * as React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from '../../Deferred/DeferredReactstrap';\nimport './OutputTable.css';\nimport { connect } from 'react-redux';\nimport OutputTableView from './OutputTableView';\nimport {\n  toggleOutputTableModal,\n  ToggleOutputTableModal,\n} from '../../../Actions/actions';\nimport {\n  getisOutputTableModalOpen,\n  getOutputTableData,\n} from '../../../Store/selectors';\nimport { AppState } from '../../../State/State';\n\ninterface Props {\n  toggleModal: () => ToggleOutputTableModal;\n  isModalOpen: boolean;\n}\n\nexport const OutputTable: React.SFC<Props> = ({ toggleModal, isModalOpen }) => {\n  return (\n    <div className=\"output-table\">\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\n        <ModalHeader toggle={toggleModal}>Table view</ModalHeader>\n        <ModalBody>\n          <OutputTableView />\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={toggleModal}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Button\n            block={true}\n            color=\"dark\"\n            outline={true}\n            onClick={toggleModal}\n          >\n            Display results table fullscreen\n          </Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <OutputTableView />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Readonly<AppState>) => ({\n  data: getOutputTableData(state),\n  isModalOpen: getisOutputTableModalOpen(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    toggleModal: toggleOutputTableModal,\n  }\n)(OutputTable);\n","import { Loading } from './Loading';\n\n// tslint:disable-next-line:no-var-requires\nconst Loadable: LoadableExport.Loadable = require('react-loadable');\n\nconst loadAceEditor = async () => {\n  const aceEditor = await import(/* webpackChunkName: \"react-ace\" */ 'react-ace');\n  await Promise.all([\n    import(/* webpackChunkName: \"brace/theme/monokai\" */ 'brace/theme/monokai'),\n    import(/* webpackChunkName: \"brace/theme/github\" */ 'brace/theme/github'),\n    import(/* webpackChunkName: \"brace/mode/json\" */ 'brace/mode/json'),\n    import(/* webpackChunkName: \"brace/mode/javascript\" */ 'brace/mode/javascript'),\n    import(/* webpackChunkName: \"brace/ext/language_tools\" */ 'brace/ext/language_tools'),\n    import(/* webpackChunkName: \"brace/ext/searchbox\" */ 'brace/ext/searchbox'),\n    import(/* webpackChunkName: \"brace/snippets/javascript\" */ 'brace/snippets/javascript'),\n    import(/* webpackChunkName: \"brace/snippets/json\" */ 'brace/snippets/json'),\n  ]);\n  return aceEditor;\n};\n\nexport const AceEditor = Loadable({\n  loading: Loading('AceEditor'),\n  loader: loadAceEditor,\n});\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Alert, TabContent, TabPane } from '../../Deferred/DeferredReactstrap';\nimport { jsonBeautify } from '../../../helpers/json';\nimport OutputTable from './OutputTable';\nimport { AppState } from '../../../State/State';\n\nimport classNames from 'classnames';\n\nimport {\n  getOutputErrorMessage,\n  getOutputIsArray,\n  getOutputText,\n} from '../../../Store/selectors';\nimport { AceEditor } from '../../Deferred/DeferredAceEditor';\n\ninterface Props {\n  output: string;\n  isArray: boolean;\n  errorMessage?: string;\n}\n\ntype tabType = 'RawJson' | 'Table';\n\nexport const Output: React.SFC<Props> = props => {\n  const [activeTab, setActiveTab] = React.useState(\n    props.isArray ? 'Table' : ('RawJson' as tabType)\n  );\n  React.useEffect(() => {\n    if (!props.isArray && activeTab === 'Table') {\n      setActiveTab('RawJson');\n    }\n  });\n\n  const display = (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n              <a\n                className={classNames({\n                  active: !props.isArray || activeTab === 'RawJson',\n                  'nav-link': true,\n                })}\n                onClick={() => {\n                  setActiveTab('RawJson');\n                }}\n              >\n                Raw JSON view\n              </a>\n            </li>\n            <li className=\"nav-item\" hidden={!props.isArray}>\n              <a\n                className={classNames({\n                  active: !props.isArray || activeTab === 'Table',\n                  'nav-link': true,\n                })}\n                onClick={() => {\n                  setActiveTab('Table');\n                }}\n              >\n                Table view\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <TabContent activeTab={activeTab}>\n        <TabPane tabId=\"RawJson\">\n          <div className=\"row\">\n            <div className=\"col-sm-10 offset-sm-2\">\n              <AceEditor\n                mode=\"json\"\n                theme=\"github\"\n                name=\"outputAceEditor\"\n                fontSize={18}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={jsonBeautify(props.output)}\n                minLines={10}\n                maxLines={100}\n                wrapEnabled={false}\n                readOnly={true}\n                editorProps={{ $blockScrolling: Infinity }}\n                setOptions={{\n                  showLineNumbers: true,\n                  tabSize: 2,\n                }}\n                width={'100%'}\n              />\n            </div>\n          </div>\n        </TabPane>\n        <TabPane tabId=\"Table\">\n          <OutputTable />\n        </TabPane>\n      </TabContent>\n    </>\n  );\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-sm-10 offset-sm-2\">\n          <h3>Output:</h3>\n        </div>\n      </div>\n      <div hidden={!props.errorMessage}>\n        <div className=\"row\">\n          <div className=\"col-sm-10 offset-sm-2\">\n            <Alert color=\"danger\">{props.errorMessage}</Alert>\n          </div>\n        </div>\n      </div>\n      {display}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: Readonly<AppState>): Props => {\n  return {\n    errorMessage: getOutputErrorMessage(state),\n    isArray: getOutputIsArray(state),\n    output: getOutputText(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Output);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { UpdateQueryAction, updateQuery } from '../../../Actions/actions';\nimport { AppState } from '../../../State/State';\nimport { AceEditor } from '../../Deferred/DeferredAceEditor';\n\ninterface Props {\n  onChange: (e: string) => UpdateQueryAction;\n  queryText: string;\n}\n\nexport const QueryEditor: React.SFC<Props> = ({ onChange, queryText }) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-sm-10 offset-sm-2\">\n          <h3>Type your query:</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-10 offset-sm-2\">\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"monokai\"\n            name=\"queryAceEditor\"\n            onChange={onChange}\n            fontSize={18}\n            highlightActiveLine={true}\n            value={queryText}\n            minLines={10}\n            maxLines={25}\n            editorProps={{ $blockScrolling: Infinity }}\n            setOptions={{\n              showLineNumbers: true,\n              tabSize: 2,\n              enableSnippets: true,\n              dragEnabled: true,\n            }}\n            width={'100%'}\n            enableBasicAutocompletion={true}\n            enableLiveAutocompletion={true}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: Readonly<AppState>) => ({\n  queryText: state.rootReducer.query.text,\n});\n\nexport default connect(\n  mapStateToProps,\n  { onChange: updateQuery }\n)(QueryEditor);\n","import * as React from 'react';\nimport { Button } from '../../Deferred/DeferredReactstrap';\n\ninterface Header {\n  key: string;\n  value: string;\n}\n\ninterface Props {\n  header: Header;\n  key: number;\n  onChange: (h: Header) => void;\n  onRemove: () => void;\n}\n\nexport const RenderHeaderInput: React.SFC<Props> = ({\n  header,\n  onRemove,\n  onChange,\n  key,\n}) => {\n  return (\n    <div className=\"row align-items-center\" key={key}>\n      <div className=\"col-sm-5\">\n        <input\n          className=\"form-control-lg form-control\"\n          value={header.key}\n          id={`headerName${key}`}\n          type=\"text\"\n          name={`headerName${key}`}\n          placeholder=\"enter an name\"\n          onChange={e => onChange({ ...header, key: e.target.value })}\n        />\n      </div>\n      <div className=\"col-sm-5\">\n        <input\n          className=\"form-control-lg form-control\"\n          value={header.value}\n          type=\"text\"\n          name={`headerValue${key}`}\n          id={`headerValue${key}`}\n          placeholder=\"enter an value\"\n          onChange={e => onChange({ ...header, value: e.target.value })}\n        />\n      </div>\n      <div className=\"col-sm-2\">\n        <Button outline={true} color=\"danger\" onClick={onRemove}>\n          remove\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport {\n  FormGroup,\n  Button,\n  Alert,\n  Form,\n} from '../../Deferred/DeferredReactstrap';\nimport { logError, logInfo } from '../../../helpers/logger';\nimport { connect } from 'react-redux';\nimport { updateSource } from '../../../Actions/actions';\nimport { customToString } from '../../../helpers/string';\nimport { RenderHeaderInput } from './RequestHeader';\n\ninterface Props {\n  onRequestSucceed: () => void;\n  updateSource: (src: string) => void;\n}\n\nconst displayError = (error: TypeError | null) => {\n  if (!error) {\n    return <></>;\n  }\n  return (\n    <Alert color=\"danger\">\n      Error: {error.message ? error.message : ''}\n      {error.stack ? error.stack : ''}\n    </Alert>\n  );\n};\n\nexport const HttpRequestSource: React.SFC<Props> = ({\n  onRequestSucceed,\n  updateSource,\n}) => {\n  const [method, setMethod] = React.useState('GET');\n  const [url, setUrl] = React.useState(\n    'https://rickandmortyapi.com/api/character/'\n  );\n  const [headers, setHeaders] = React.useState([\n    { key: 'Accept', value: 'application/json' },\n  ]);\n  const [error, setError] = React.useState(null as TypeError | null);\n  const [body, setBody] = React.useState('');\n  const [hasBody, setHasBody] = React.useState(false);\n\n  const submit = async () => {\n    setError(null);\n\n    const requestInit: RequestInit = {\n      method: method,\n      headers: headers.map(h => [h.key, h.value]),\n      body: hasBody ? body : null,\n    };\n\n    const request = new Request(url, requestInit);\n\n    logInfo('request', {\n      url: request.url,\n      method: request.method,\n      mode: request.mode,\n      body: request.body,\n      headers: Array.from((request.headers as any).entries()),\n      cache: request.cache,\n      credentials: request.credentials,\n      redirect: request.redirect,\n      referrer: request.referrer,\n    });\n\n    let json: string;\n    try {\n      const result = await fetch(request);\n      json = await result.json();\n    } catch (error) {\n      logError('HttpRequestSource.submit', error);\n      setError(error);\n      return;\n    }\n    updateSource(customToString(json));\n    onRequestSucceed();\n  };\n\n  return (\n    <>\n      <FormGroup>\n        <label htmlFor=\"requestMethod\">Method</label>\n        <select\n          className=\"form-control-lg form-control\"\n          defaultValue={method}\n          name=\"requestMethod\"\n          id=\"requestMethod\"\n          onChange={e => setMethod(e.target.value)}\n        >\n          <option>GET</option>\n          <option>POST</option>\n          <option>PUT</option>\n          <option>OPTIONS</option>\n        </select>\n      </FormGroup>\n      <FormGroup>\n        <label htmlFor=\"requestUrl\">Request URL</label>\n        <input\n          defaultValue={url}\n          className=\"form-control-lg form-control\"\n          type=\"url\"\n          name=\"requestUrl\"\n          id=\"requestUrl\"\n          placeholder=\"enter an URL\"\n          onChange={e => setUrl(e.target.value)}\n        />\n      </FormGroup>\n      <div className=\"position-relative form-check\">\n        <label className=\"form-check-label\">\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            onChange={() => setHasBody(!hasBody)}\n          />{' '}\n          Add body\n        </label>\n      </div>\n      <Form inline={true} hidden={!hasBody}>\n        <FormGroup>\n          <label>Body</label>\n          <input\n            className=\"form-control-lg form-control\"\n            type=\"textarea\"\n            value={body}\n            onChange={e => setBody(e.target.value)}\n          />{' '}\n        </FormGroup>\n      </Form>\n      <label htmlFor=\"headers\">Request headers</label>{' '}\n      <Button\n        outline={true}\n        color=\"primary\"\n        onClick={() =>\n          setHeaders([\n            ...headers,\n            { key: `name-${headers.length + 1}`, value: 'value' },\n          ])\n        }\n      >\n        Add header\n      </Button>\n      <br />\n      <br />\n      {headers.map((header, index) => (\n        <RenderHeaderInput\n          header={header}\n          key={index}\n          onChange={h => {\n            headers[index] = { ...h };\n            setHeaders([...headers]);\n          }}\n          onRemove={() => setHeaders(headers.filter(h => h != header))}\n        />\n      ))}\n      <br />\n      <Button block={true} color=\"primary\" onClick={submit}>\n        Submit\n      </Button>\n      {displayError(error)}\n    </>\n  );\n};\n\nexport default connect(\n  null,\n  { updateSource }\n)(HttpRequestSource);\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  ButtonDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from '../../Deferred/DeferredReactstrap';\nimport { UpdateSource, updateSource } from '../../../Actions/actions';\nimport { AppState } from '../../../State/State';\nimport HttpRequestSource from './RequestSource';\nimport './ImportMenu.css';\nimport { logInfo } from '../../../helpers/logger';\ninterface Props {\n  onFileContentReady: (fileContent: string) => UpdateSource;\n}\n\ninterface State {\n  toggleDropdownIsOpen: boolean;\n  modal: boolean;\n}\n\nexport class ImportMenu extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { toggleDropdownIsOpen: false, modal: false };\n  }\n\n  public render() {\n    return (\n      <>\n        <ButtonDropdown\n          isOpen={this.state.toggleDropdownIsOpen}\n          toggle={this.toggleImportDropdown}\n        >\n          <DropdownToggle caret={true} color=\"primary\">\n            Import\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem>\n              <label>\n                Browse JSON file...\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"sourceFile\"\n                  style={{ display: 'none' }}\n                  onChange={this.onFileChange}\n                />\n              </label>\n            </DropdownItem>\n            <DropdownItem onClick={this.toggleModal}>\n              <label>HTTP request</label>\n            </DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        <Modal\n          id=\"requestModal\"\n          role=\"dialog\"\n          size=\"lg\"\n          isOpen={this.state.modal}\n          toggle={this.toggleModal}\n        >\n          <ModalHeader toggle={this.toggleModal}>\n            Import JSON from an HTTP request\n          </ModalHeader>\n          <ModalBody>\n            <HttpRequestSource onRequestSucceed={this.toggleModal} />\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"secondary\" onClick={this.toggleModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </>\n    );\n  }\n\n  private readonly toggleImportDropdown = () =>\n    this.setState({\n      toggleDropdownIsOpen: !this.state.toggleDropdownIsOpen,\n    });\n\n  private toggleModal = () => this.setState({ modal: !this.state.modal });\n\n  private onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    logInfo('onFileChange');\n    if (e.target.files && e.target.files.length > 0) {\n      const fileReader = new FileReader();\n      logInfo('e.target.files', e.target.files[0].name);\n      fileReader.onload = () => {\n        if (fileReader.result) {\n          this.props.onFileContentReady(fileReader.result.toString());\n        }\n      };\n      fileReader.readAsText(e.target.files[0]);\n    }\n  };\n}\n\nconst mapStateToProps = (state: Readonly<AppState>) => ({\n  sourceText: state.rootReducer.source.text,\n});\n\nexport default connect(\n  mapStateToProps,\n  { onFileContentReady: updateSource }\n)(ImportMenu);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { UpdateSource, updateSource } from '../../../Actions/actions';\nimport { jsonBeautify } from '../../../helpers/json';\nimport { AppState } from '../../../State/State';\nimport ImportMenu from './ImportMenu';\nimport { AceEditor } from '../../Deferred/DeferredAceEditor';\n\ninterface Props {\n  onChange: (val: string) => UpdateSource;\n  sourceText: string;\n}\n\nexport const SourceEditor: React.SFC<Props> = ({ onChange, sourceText }) => (\n  <>\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-2\">\n        <h3>paste your JSON:</h3>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-sm-2\">\n        <ImportMenu />\n      </div>\n      <div className=\"col-sm-10\">\n        <AceEditor\n          mode=\"json\"\n          theme=\"monokai\"\n          name=\"sourceAceEditor\"\n          onChange={onChange}\n          fontSize={18}\n          cursorStart={1}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={jsonBeautify(sourceText)}\n          minLines={10}\n          maxLines={20}\n          wrapEnabled={true}\n          // debounceChangePeriod={2000}\n          setOptions={{\n            showLineNumbers: true,\n          }}\n          editorProps={{ $blockScrolling: Infinity }}\n          width={'100%'}\n        />\n      </div>\n    </div>\n  </>\n);\n\nconst mapStateToProps = (state: Readonly<AppState>) => ({\n  sourceText: state.rootReducer.source.text,\n});\n\nexport default connect(\n  mapStateToProps,\n  { onChange: updateSource }\n)(SourceEditor);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '../Deferred/DeferredReactstrap';\nimport { ResetEditor, resetEditor } from '../../Actions/actions';\nimport './Editor.css';\nimport Output from './Output/Output';\nimport QueryEditor from './QueryEditor/QueryEditor';\nimport SourceEditor from './SourceEditor/SourceEditor';\n\ninterface Props {\n  onReset: () => ResetEditor;\n}\n\nexport const Editor: React.SFC<Props> = ({ onReset }) => (\n  <>\n    <h1>Paste your JSON and Query it.</h1>\n    <div className=\"row\">\n      <div className=\"col\">\n        <Button className=\"float-right\" color=\"warning\" onClick={onReset}>\n          Reset\n        </Button>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <SourceEditor />\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <QueryEditor />\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <Output />\n      </div>\n    </div>\n  </>\n);\n\nexport default connect(\n  null,\n  { onReset: resetEditor }\n)(Editor);\n","import * as React from 'react';\nimport { version } from '../../package.json';\n\nexport const Header = () => (\n  <nav className=\"navbar navbar-expand-md bg-primary\">\n    <a href=\"/\" className=\"navbar-brand\">\n      Keyrier JSON\n    </a>\n    <ul className=\"mr-auto navbar-nav\">\n      <li className=\"nav-item\">\n        <a href=\"#\" className=\"nav-link\">\n          {version}\n        </a>\n      </li>\n    </ul>\n    <ul className=\"ml-auto navbar-nav\">\n      <li className=\"nav-item\">\n        <a\n          href=\"https://github.com/magoo-magoo/keyrier-json\"\n          className=\"nav-link\"\n        >\n          GitHub\n        </a>\n      </li>\n    </ul>\n  </nav>\n);\n","import './App.css';\n\nimport * as React from 'react';\nimport Editor from './Editor/Editor';\nimport { Header } from './Header';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"container\">\n      <Editor />\n    </div>\n  </div>\n);\n\nexport default App;\n","import { Provider } from 'react-redux';\nimport './index.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport { configureStore } from './Store/store';\nimport * as React from 'react';\nimport App from './Components/App';\nimport(/* webpackChunkName: \"bootswatch/dist/sandstone/bootstrap.min.css\" */ 'bootswatch/dist/sandstone/bootstrap.min.css');\n\nconst start = async () => {\n  const promises = await Promise.all([\n    configureStore(),\n    import(/* webpackChunkName: \"react-dom\" */ 'react-dom'),\n    import(/* webpackChunkName: \"lodash\" */ 'lodash'),\n  ]);\n\n  const store = promises['0'];\n  const ReactDOM = promises['1'];\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root') as HTMLElement\n  );\n\n  registerServiceWorker();\n\n  require('react-loadable').preloadAll();\n};\n\nstart();\n"],"sourceRoot":""}